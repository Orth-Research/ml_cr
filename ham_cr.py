# Module creates crystal field Hamiltonian matrix for point group (PG) Oh and J=4.
# Number of crystal field variables is 2: {x0, x1}.
import numpy as np
def ham_cr_PG_Oh_J_3_5(x0, x1):
	J = 3.5
	dim=int(2*J+1)
	ham = np.arange(dim*dim, dtype=np.float)
	ham = ham.reshape(dim,dim)
	ham[0][0] = 0.17407765595569785*x0 + 1.7232808737106584*x0*x1 - 0.17407765595569785*x0*np.abs(x1)
	ham[0][1] = 0.
	ham[0][2] = 0.
	ham[0][3] = 0.
	ham[0][4] = -3.089571903266623*x0 + 1.4564381625088383*x0*x1 + 3.089571903266623*x0*np.abs(x1)
	ham[0][5] = 0.
	ham[0][6] = 0.
	ham[0][7] = 0.
	ham[1][0] = 0.
	ham[1][1] = -0.8703882797784892*x0 - 3.200378765462651*x0*x1 + 0.8703882797784892*x0*np.abs(x1)
	ham[1][2] = 0.
	ham[1][3] = 0.
	ham[1][4] = 0.
	ham[1][5] = 2.1105794120443453*x0 + 2.1320071635561044*x0*x1 - 2.1105794120443453*x0*np.abs(x1)
	ham[1][6] = 0.
	ham[1][7] = 0.
	ham[2][0] = 0.
	ham[2][1] = 0.
	ham[2][2] = 1.5666989036012806*x0 - 0.7385489458759964*x0*x1 - 1.5666989036012806*x0*np.abs(x1)
	ham[2][3] = 0.
	ham[2][4] = 0.
	ham[2][5] = 0.
	ham[2][6] = 2.1105794120443453*x0 + 2.1320071635561044*x0*x1 - 2.1105794120443453*x0*np.abs(x1)
	ham[2][7] = 0.
	ham[3][0] = 0.
	ham[3][1] = 0.
	ham[3][2] = 0.
	ham[3][3] = -0.8703882797784892*x0 + 2.215646837627989*x0*x1 + 0.8703882797784892*x0*np.abs(x1)
	ham[3][4] = 0.
	ham[3][5] = 0.
	ham[3][6] = 0.
	ham[3][7] = -3.089571903266623*x0 + 1.4564381625088383*x0*x1 + 3.089571903266623*x0*np.abs(x1)
	ham[4][0] = -3.089571903266623*x0 + 1.4564381625088383*x0*x1 + 3.089571903266623*x0*np.abs(x1)
	ham[4][1] = 0.
	ham[4][2] = 0.
	ham[4][3] = 0.
	ham[4][4] = -0.8703882797784892*x0 + 2.215646837627989*x0*x1 + 0.8703882797784892*x0*np.abs(x1)
	ham[4][5] = 0.
	ham[4][6] = 0.
	ham[4][7] = 0.
	ham[5][0] = 0.
	ham[5][1] = 2.1105794120443453*x0 + 2.1320071635561044*x0*x1 - 2.1105794120443453*x0*np.abs(x1)
	ham[5][2] = 0.
	ham[5][3] = 0.
	ham[5][4] = 0.
	ham[5][5] = 1.5666989036012806*x0 - 0.7385489458759964*x0*x1 - 1.5666989036012806*x0*np.abs(x1)
	ham[5][6] = 0.
	ham[5][7] = 0.
	ham[6][0] = 0.
	ham[6][1] = 0.
	ham[6][2] = 2.1105794120443453*x0 + 2.1320071635561044*x0*x1 - 2.1105794120443453*x0*np.abs(x1)
	ham[6][3] = 0.
	ham[6][4] = 0.
	ham[6][5] = 0.
	ham[6][6] = -0.8703882797784892*x0 - 3.200378765462651*x0*x1 + 0.8703882797784892*x0*np.abs(x1)
	ham[6][7] = 0.
	ham[7][0] = 0.
	ham[7][1] = 0.
	ham[7][2] = 0.
	ham[7][3] = -3.089571903266623*x0 + 1.4564381625088383*x0*x1 + 3.089571903266623*x0*np.abs(x1)
	ham[7][4] = 0.
	ham[7][5] = 0.
	ham[7][6] = 0.
	ham[7][7] = 0.17407765595569785*x0 + 1.7232808737106584*x0*x1 - 0.17407765595569785*x0*np.abs(x1)
	return ham
# Module creates crystal field Hamiltonian matrix for point group (PG) Oh and J=4.
# Number of crystal field variables is 2: {x0, x1}.
def ham_cr_PG_Oh_J_4(x0, x1):
	J = 4.
	dim=int(2*J+1)
	ham = np.arange(dim*dim, dtype=np.float)
	ham = ham.reshape(dim,dim)
	ham[0][0] = 0.2860387767736777*x0 + 2.1507845372965946*x0*x1 - 0.2860387767736777*x0*np.abs(x1)
	ham[0][1] = 0.
	ham[0][2] = 0.
	ham[0][3] = 0.
	ham[0][4] = -3.5897581584785954*x0 + 1.285339605745463*x0*x1 + 3.5897581584785954*x0*np.abs(x1)
	ham[0][5] = 0.
	ham[0][6] = 0.
	ham[0][7] = 0.
	ham[0][8] = 0.
	ham[1][0] = 0.
	ham[1][1] = -1.2156648012881304*x0 - 3.226176805944892*x0*x1 + 1.2156648012881304*x0*np.abs(x1)
	ham[1][2] = 0.
	ham[1][3] = 0.
	ham[1][4] = 0.
	ham[1][5] = 0.5675906014982022*x0 + 2.0323003604892547*x0*x1 - 0.5675906014982022*x0*np.abs(x1)
	ham[1][6] = 0.
	ham[1][7] = 0.
	ham[1][8] = 0.
	ham[2][0] = 0.
	ham[2][1] = 0.
	ham[2][2] = 1.5732132722552274*x0 - 1.6899021364473241*x0*x1 - 1.5732132722552274*x0*np.abs(x1)
	ham[2][3] = 0.
	ham[2][4] = 0.
	ham[2][5] = 0.
	ham[2][6] = 3.003407156123616*x0 + 2.3044120042463514*x0*x1 - 3.003407156123616*x0*np.abs(x1)
	ham[2][7] = 0.
	ham[2][8] = 0.
	ham[3][0] = 0.
	ham[3][1] = 0.
	ham[3][2] = 0.
	ham[3][3] = 0.07150969419341943*x0 + 1.3826472025478107*x0*x1 - 0.07150969419341943*x0*np.abs(x1)
	ham[3][4] = 0.
	ham[3][5] = 0.
	ham[3][6] = 0.
	ham[3][7] = 0.5675906014982022*x0 + 2.0323003604892547*x0*x1 - 0.5675906014982022*x0*np.abs(x1)
	ham[3][8] = 0.
	ham[4][0] = -3.5897581584785954*x0 + 1.285339605745463*x0*x1 + 3.5897581584785954*x0*np.abs(x1)
	ham[4][1] = 0.
	ham[4][2] = 0.
	ham[4][3] = 0.
	ham[4][4] = -1.4301938838683885*x0 + 2.7652944050956214*x0*x1 + 1.4301938838683885*x0*np.abs(x1)
	ham[4][5] = 0.
	ham[4][6] = 0.
	ham[4][7] = 0.
	ham[4][8] = -3.5897581584785954*x0 + 1.285339605745463*x0*x1 + 3.5897581584785954*x0*np.abs(x1)
	ham[5][0] = 0.
	ham[5][1] = 0.5675906014982022*x0 + 2.0323003604892547*x0*x1 - 0.5675906014982022*x0*np.abs(x1)
	ham[5][2] = 0.
	ham[5][3] = 0.
	ham[5][4] = 0.
	ham[5][5] = 0.07150969419341943*x0 + 1.3826472025478107*x0*x1 - 0.07150969419341943*x0*np.abs(x1)
	ham[5][6] = 0.
	ham[5][7] = 0.
	ham[5][8] = 0.
	ham[6][0] = 0.
	ham[6][1] = 0.
	ham[6][2] = 3.003407156123616*x0 + 2.3044120042463514*x0*x1 - 3.003407156123616*x0*np.abs(x1)
	ham[6][3] = 0.
	ham[6][4] = 0.
	ham[6][5] = 0.
	ham[6][6] = 1.5732132722552274*x0 - 1.6899021364473241*x0*x1 - 1.5732132722552274*x0*np.abs(x1)
	ham[6][7] = 0.
	ham[6][8] = 0.
	ham[7][0] = 0.
	ham[7][1] = 0.
	ham[7][2] = 0.
	ham[7][3] = 0.5675906014982022*x0 + 2.0323003604892547*x0*x1 - 0.5675906014982022*x0*np.abs(x1)
	ham[7][4] = 0.
	ham[7][5] = 0.
	ham[7][6] = 0.
	ham[7][7] = -1.2156648012881304*x0 - 3.226176805944892*x0*x1 + 1.2156648012881304*x0*np.abs(x1)
	ham[7][8] = 0.
	ham[8][0] = 0.
	ham[8][1] = 0.
	ham[8][2] = 0.
	ham[8][3] = 0.
	ham[8][4] = -3.5897581584785954*x0 + 1.285339605745463*x0*x1 + 3.5897581584785954*x0*np.abs(x1)
	ham[8][5] = 0.
	ham[8][6] = 0.
	ham[8][7] = 0.
	ham[8][8] = 0.2860387767736777*x0 + 2.1507845372965946*x0*x1 - 0.2860387767736777*x0*np.abs(x1)
	return ham
# Module creates crystal field Hamiltonian matrix for point group (PG) Oh and J=4.
# Number of crystal field variables is 2: {x0, x1}.
def ham_cr_PG_Oh_J_7_5(x0, x1):
	J = 7.5
	dim=int(2*J+1)
	ham = np.arange(dim*dim, dtype=np.float)
	ham = ham.reshape(dim,dim)
	ham[0][0] = 1.3206309278036845*x0 + 4.864733772255436*x0*x1 - 1.3206309278036845*x0*np.abs(x1)
	ham[0][1] = 0.
	ham[0][2] = 0.
	ham[0][3] = 0.
	ham[0][4] = -3.75322358866369*x0 + 0.6583589693379592*x0*x1 + 3.75322358866369*x0*np.abs(x1)
	ham[0][5] = 0.
	ham[0][6] = 0.
	ham[0][7] = 0.
	ham[0][8] = 0.
	ham[0][9] = 0.
	ham[0][10] = 0.
	ham[0][11] = 0.
	ham[0][12] = 0.
	ham[0][13] = 0.
	ham[0][14] = 0.
	ham[0][15] = 0.
	ham[1][0] = 0.
	ham[1][1] = -2.377135670046632*x0 - 1.6215779240851451*x0*x1 + 2.377135670046632*x0*np.abs(x1)
	ham[1][2] = 0.
	ham[1][3] = 0.
	ham[1][4] = 0.
	ham[1][5] = -4.312125606308569*x0 + 1.260661447757372*x0*x1 + 4.312125606308569*x0*np.abs(x1)
	ham[1][6] = 0.
	ham[1][7] = 0.
	ham[1][8] = 0.
	ham[1][9] = 0.
	ham[1][10] = 0.
	ham[1][11] = 0.
	ham[1][12] = 0.
	ham[1][13] = 0.
	ham[1][14] = 0.
	ham[1][15] = 0.
	ham[2][0] = 0.
	ham[2][1] = 0.
	ham[2][2] = -0.7923785566822107*x0 - 3.9381178156353527*x0*x1 + 0.7923785566822107*x0*np.abs(x1)
	ham[2][3] = 0.
	ham[2][4] = 0.
	ham[2][5] = 0.
	ham[2][6] = -2.9457425856318395*x0 + 1.8454193982447342*x0*x1 + 2.9457425856318395*x0*np.abs(x1)
	ham[2][7] = 0.
	ham[2][8] = 0.
	ham[2][9] = 0.
	ham[2][10] = 0.
	ham[2][11] = 0.
	ham[2][12] = 0.
	ham[2][13] = 0.
	ham[2][14] = 0.
	ham[2][15] = 0.
	ham[3][0] = 0.
	ham[3][1] = 0.
	ham[3][2] = 0.
	ham[3][3] = 1.1987265344679596*x0 - 3.5817270630891667*x0*x1 - 1.1987265344679596*x0*np.abs(x1)
	ham[3][4] = 0.
	ham[3][5] = 0.
	ham[3][6] = 0.
	ham[3][7] = -0.5348533550938129*x0 + 2.3454871211914936*x0*x1 + 0.5348533550938129*x0*np.abs(x1)
	ham[3][8] = 0.
	ham[3][9] = 0.
	ham[3][10] = 0.
	ham[3][11] = 0.
	ham[3][12] = 0.
	ham[3][13] = 0.
	ham[3][14] = 0.
	ham[3][15] = 0.
	ham[4][0] = -3.75322358866369*x0 + 0.6583589693379592*x0*x1 + 3.75322358866369*x0*np.abs(x1)
	ham[4][1] = 0.
	ham[4][2] = 0.
	ham[4][3] = 0.
	ham[4][4] = 1.7676137033680084*x0 - 1.7997733003582381*x0*x1 - 1.7676137033680084*x0*np.abs(x1)
	ham[4][5] = 0.
	ham[4][6] = 0.
	ham[4][7] = 0.
	ham[4][8] = 1.8527863712423245*x0 + 2.708335241601419*x0*x1 - 1.8527863712423245*x0*np.abs(x1)
	ham[4][9] = 0.
	ham[4][10] = 0.
	ham[4][11] = 0.
	ham[4][12] = 0.
	ham[4][13] = 0.
	ham[4][14] = 0.
	ham[4][15] = 0.
	ham[5][0] = 0.
	ham[5][1] = -4.312125606308569*x0 + 1.260661447757372*x0*x1 + 4.312125606308569*x0*np.abs(x1)
	ham[5][2] = 0.
	ham[5][3] = 0.
	ham[5][4] = 0.
	ham[5][5] = 0.9142829500179354*x0 + 0.4098493654281136*x0*x1 - 0.9142829500179354*x0*np.abs(x1)
	ham[5][6] = 0.
	ham[5][7] = 0.
	ham[5][8] = 0.
	ham[5][9] = 3.3049357965314616*x0 + 2.8986204436427827*x0*x1 - 3.3049357965314616*x0*np.abs(x1)
	ham[5][10] = 0.
	ham[5][11] = 0.
	ham[5][12] = 0.
	ham[5][13] = 0.
	ham[5][14] = 0.
	ham[5][15] = 0.
	ham[6][0] = 0.
	ham[6][1] = 0.
	ham[6][2] = -2.9457425856318395*x0 + 1.8454193982447342*x0*x1 + 2.9457425856318395*x0*np.abs(x1)
	ham[6][3] = 0.
	ham[6][4] = 0.
	ham[6][5] = 0.
	ham[6][6] = -0.5079349722321863*x0 + 2.298720353922898*x0*x1 + 0.5079349722321863*x0*np.abs(x1)
	ham[6][7] = 0.
	ham[6][8] = 0.
	ham[6][9] = 0.
	ham[6][10] = 3.3049357965314616*x0 + 2.8986204436427827*x0*x1 - 3.3049357965314616*x0*np.abs(x1)
	ham[6][11] = 0.
	ham[6][12] = 0.
	ham[6][13] = 0.
	ham[6][14] = 0.
	ham[6][15] = 0.
	ham[7][0] = 0.
	ham[7][1] = 0.
	ham[7][2] = 0.
	ham[7][3] = -0.5348533550938129*x0 + 2.3454871211914936*x0*x1 + 0.5348533550938129*x0*np.abs(x1)
	ham[7][4] = 0.
	ham[7][5] = 0.
	ham[7][6] = 0.
	ham[7][7] = -1.523804916696559*x0 + 3.3678926115614556*x0*x1 + 1.523804916696559*x0*np.abs(x1)
	ham[7][8] = 0.
	ham[7][9] = 0.
	ham[7][10] = 0.
	ham[7][11] = 1.8527863712423245*x0 + 2.708335241601419*x0*x1 - 1.8527863712423245*x0*np.abs(x1)
	ham[7][12] = 0.
	ham[7][13] = 0.
	ham[7][14] = 0.
	ham[7][15] = 0.
	ham[8][0] = 0.
	ham[8][1] = 0.
	ham[8][2] = 0.
	ham[8][3] = 0.
	ham[8][4] = 1.8527863712423245*x0 + 2.708335241601419*x0*x1 - 1.8527863712423245*x0*np.abs(x1)
	ham[8][5] = 0.
	ham[8][6] = 0.
	ham[8][7] = 0.
	ham[8][8] = -1.523804916696559*x0 + 3.3678926115614556*x0*x1 + 1.523804916696559*x0*np.abs(x1)
	ham[8][9] = 0.
	ham[8][10] = 0.
	ham[8][11] = 0.
	ham[8][12] = -0.5348533550938129*x0 + 2.3454871211914936*x0*x1 + 0.5348533550938129*x0*np.abs(x1)
	ham[8][13] = 0.
	ham[8][14] = 0.
	ham[8][15] = 0.
	ham[9][0] = 0.
	ham[9][1] = 0.
	ham[9][2] = 0.
	ham[9][3] = 0.
	ham[9][4] = 0.
	ham[9][5] = 3.3049357965314616*x0 + 2.8986204436427827*x0*x1 - 3.3049357965314616*x0*np.abs(x1)
	ham[9][6] = 0.
	ham[9][7] = 0.
	ham[9][8] = 0.
	ham[9][9] = -0.5079349722321863*x0 + 2.298720353922898*x0*x1 + 0.5079349722321863*x0*np.abs(x1)
	ham[9][10] = 0.
	ham[9][11] = 0.
	ham[9][12] = 0.
	ham[9][13] = -2.9457425856318395*x0 + 1.8454193982447342*x0*x1 + 2.9457425856318395*x0*np.abs(x1)
	ham[9][14] = 0.
	ham[9][15] = 0.
	ham[10][0] = 0.
	ham[10][1] = 0.
	ham[10][2] = 0.
	ham[10][3] = 0.
	ham[10][4] = 0.
	ham[10][5] = 0.
	ham[10][6] = 3.3049357965314616*x0 + 2.8986204436427827*x0*x1 - 3.3049357965314616*x0*np.abs(x1)
	ham[10][7] = 0.
	ham[10][8] = 0.
	ham[10][9] = 0.
	ham[10][10] = 0.9142829500179354*x0 + 0.4098493654281136*x0*x1 - 0.9142829500179354*x0*np.abs(x1)
	ham[10][11] = 0.
	ham[10][12] = 0.
	ham[10][13] = 0.
	ham[10][14] = -4.312125606308569*x0 + 1.260661447757372*x0*x1 + 4.312125606308569*x0*np.abs(x1)
	ham[10][15] = 0.
	ham[11][0] = 0.
	ham[11][1] = 0.
	ham[11][2] = 0.
	ham[11][3] = 0.
	ham[11][4] = 0.
	ham[11][5] = 0.
	ham[11][6] = 0.
	ham[11][7] = 1.8527863712423245*x0 + 2.708335241601419*x0*x1 - 1.8527863712423245*x0*np.abs(x1)
	ham[11][8] = 0.
	ham[11][9] = 0.
	ham[11][10] = 0.
	ham[11][11] = 1.7676137033680084*x0 - 1.7997733003582381*x0*x1 - 1.7676137033680084*x0*np.abs(x1)
	ham[11][12] = 0.
	ham[11][13] = 0.
	ham[11][14] = 0.
	ham[11][15] = -3.75322358866369*x0 + 0.6583589693379592*x0*x1 + 3.75322358866369*x0*np.abs(x1)
	ham[12][0] = 0.
	ham[12][1] = 0.
	ham[12][2] = 0.
	ham[12][3] = 0.
	ham[12][4] = 0.
	ham[12][5] = 0.
	ham[12][6] = 0.
	ham[12][7] = 0.
	ham[12][8] = -0.5348533550938129*x0 + 2.3454871211914936*x0*x1 + 0.5348533550938129*x0*np.abs(x1)
	ham[12][9] = 0.
	ham[12][10] = 0.
	ham[12][11] = 0.
	ham[12][12] = 1.1987265344679596*x0 - 3.5817270630891667*x0*x1 - 1.1987265344679596*x0*np.abs(x1)
	ham[12][13] = 0.
	ham[12][14] = 0.
	ham[12][15] = 0.
	ham[13][0] = 0.
	ham[13][1] = 0.
	ham[13][2] = 0.
	ham[13][3] = 0.
	ham[13][4] = 0.
	ham[13][5] = 0.
	ham[13][6] = 0.
	ham[13][7] = 0.
	ham[13][8] = 0.
	ham[13][9] = -2.9457425856318395*x0 + 1.8454193982447342*x0*x1 + 2.9457425856318395*x0*np.abs(x1)
	ham[13][10] = 0.
	ham[13][11] = 0.
	ham[13][12] = 0.
	ham[13][13] = -0.7923785566822107*x0 - 3.9381178156353527*x0*x1 + 0.7923785566822107*x0*np.abs(x1)
	ham[13][14] = 0.
	ham[13][15] = 0.
	ham[14][0] = 0.
	ham[14][1] = 0.
	ham[14][2] = 0.
	ham[14][3] = 0.
	ham[14][4] = 0.
	ham[14][5] = 0.
	ham[14][6] = 0.
	ham[14][7] = 0.
	ham[14][8] = 0.
	ham[14][9] = 0.
	ham[14][10] = -4.312125606308569*x0 + 1.260661447757372*x0*x1 + 4.312125606308569*x0*np.abs(x1)
	ham[14][11] = 0.
	ham[14][12] = 0.
	ham[14][13] = 0.
	ham[14][14] = -2.377135670046632*x0 - 1.6215779240851451*x0*x1 + 2.377135670046632*x0*np.abs(x1)
	ham[14][15] = 0.
	ham[15][0] = 0.
	ham[15][1] = 0.
	ham[15][2] = 0.
	ham[15][3] = 0.
	ham[15][4] = 0.
	ham[15][5] = 0.
	ham[15][6] = 0.
	ham[15][7] = 0.
	ham[15][8] = 0.
	ham[15][9] = 0.
	ham[15][10] = 0.
	ham[15][11] = -3.75322358866369*x0 + 0.6583589693379592*x0*x1 + 3.75322358866369*x0*np.abs(x1)
	ham[15][12] = 0.
	ham[15][13] = 0.
	ham[15][14] = 0.
	ham[15][15] = 1.3206309278036845*x0 + 4.864733772255436*x0*x1 - 1.3206309278036845*x0*np.abs(x1)
	return ham
# Module creates crystal field Hamiltonian matrix for point group (PG) Oh and J=4.
# Number of crystal field variables is 2: {x0, x1}.
def ham_cr_PG_Oh_J_6(x0, x1):
	J = 6.
	dim=int(2*J+1)
	ham = np.arange(dim*dim, dtype=np.float)
	ham = ham.reshape(dim,dim)
	ham[0][0] = 0.848190570910832*x0 + 3.767605730590247*x0*x1 - 0.848190570910832*x0*np.abs(x1)
	ham[0][1] = 0.
	ham[0][2] = 0.
	ham[0][3] = 0.
	ham[0][4] = -4.002949763754913*x0 + 0.8467064217932224*x0*x1 + 4.002949763754913*x0*np.abs(x1)
	ham[0][5] = 0.
	ham[0][6] = 0.
	ham[0][7] = 0.
	ham[0][8] = 0.
	ham[0][9] = 0.
	ham[0][10] = 0.
	ham[0][11] = 0.
	ham[0][12] = 0.
	ham[1][0] = 0.
	ham[1][1] = -2.12047642727708*x0 - 2.5117371537268314*x0*x1 + 2.12047642727708*x0*np.abs(x1)
	ham[1][2] = 0.
	ham[1][3] = 0.
	ham[1][4] = 0.
	ham[1][5] = -3.288758823252812*x0 + 1.545867356002106*x0*x1 + 3.288758823252812*x0*np.abs(x1)
	ham[1][6] = 0.
	ham[1][7] = 0.
	ham[1][8] = 0.
	ham[1][9] = 0.
	ham[1][10] = 0.
	ham[1][11] = 0.
	ham[1][12] = 0.
	ham[2][0] = 0.
	ham[2][1] = 0.
	ham[2][2] = 0.30843293487666623*x0 - 3.6534358599663004*x0*x1 - 0.30843293487666623*x0*np.abs(x1)
	ham[2][3] = 0.
	ham[2][4] = 0.
	ham[2][5] = 0.
	ham[2][6] = -0.577025184552822*x0 + 2.1359226988355804*x0*x1 + 0.577025184552822*x0*np.abs(x1)
	ham[2][7] = 0.
	ham[2][8] = 0.
	ham[2][9] = 0.
	ham[2][10] = 0.
	ham[2][11] = 0.
	ham[2][12] = 0.
	ham[3][0] = 0.
	ham[3][1] = 0.
	ham[3][2] = 0.
	ham[3][3] = 1.657827024962081*x0 - 2.0550576712310438*x0*x1 - 1.657827024962081*x0*np.abs(x1)
	ham[3][4] = 0.
	ham[3][5] = 0.
	ham[3][6] = 0.
	ham[3][7] = 2.1335793929201725*x0 + 2.527257819368949*x0*x1 - 2.1335793929201725*x0*np.abs(x1)
	ham[3][8] = 0.
	ham[3][9] = 0.
	ham[3][10] = 0.
	ham[3][11] = 0.
	ham[3][12] = 0.
	ham[4][0] = -4.002949763754913*x0 + 0.8467064217932224*x0*x1 + 4.002949763754913*x0*np.abs(x1)
	ham[4][1] = 0.
	ham[4][2] = 0.
	ham[4][3] = 0.
	ham[4][4] = 0.848190570910832*x0 + 0.4186228589544719*x0*x1 - 0.848190570910832*x0*np.abs(x1)
	ham[4][5] = 0.
	ham[4][6] = 0.
	ham[4][7] = 0.
	ham[4][8] = 3.2385458162049954*x0 + 2.663963647892094*x0*x1 - 3.2385458162049954*x0*np.abs(x1)
	ham[4][9] = 0.
	ham[4][10] = 0.
	ham[4][11] = 0.
	ham[4][12] = 0.
	ham[5][0] = 0.
	ham[5][1] = -3.288758823252812*x0 + 1.545867356002106*x0*x1 + 3.288758823252812*x0*np.abs(x1)
	ham[5][2] = 0.
	ham[5][3] = 0.
	ham[5][4] = 0.
	ham[5][5] = -0.7710823371916656*x0 + 2.4356239066442003*x0*x1 + 0.7710823371916656*x0*np.abs(x1)
	ham[5][6] = 0.
	ham[5][7] = 0.
	ham[5][8] = 0.
	ham[5][9] = 2.1335793929201725*x0 + 2.527257819368949*x0*x1 - 2.1335793929201725*x0*np.abs(x1)
	ham[5][10] = 0.
	ham[5][11] = 0.
	ham[5][12] = 0.
	ham[6][0] = 0.
	ham[6][1] = 0.
	ham[6][2] = -0.577025184552822*x0 + 2.1359226988355804*x0*x1 + 0.577025184552822*x0*np.abs(x1)
	ham[6][3] = 0.
	ham[6][4] = 0.
	ham[6][5] = 0.
	ham[6][6] = -1.5421646743833313*x0 + 3.1967563774705128*x0*x1 + 1.5421646743833313*x0*np.abs(x1)
	ham[6][7] = 0.
	ham[6][8] = 0.
	ham[6][9] = 0.
	ham[6][10] = -0.577025184552822*x0 + 2.1359226988355804*x0*x1 + 0.577025184552822*x0*np.abs(x1)
	ham[6][11] = 0.
	ham[6][12] = 0.
	ham[7][0] = 0.
	ham[7][1] = 0.
	ham[7][2] = 0.
	ham[7][3] = 2.1335793929201725*x0 + 2.527257819368949*x0*x1 - 2.1335793929201725*x0*np.abs(x1)
	ham[7][4] = 0.
	ham[7][5] = 0.
	ham[7][6] = 0.
	ham[7][7] = -0.7710823371916656*x0 + 2.4356239066442003*x0*x1 + 0.7710823371916656*x0*np.abs(x1)
	ham[7][8] = 0.
	ham[7][9] = 0.
	ham[7][10] = 0.
	ham[7][11] = -3.288758823252812*x0 + 1.545867356002106*x0*x1 + 3.288758823252812*x0*np.abs(x1)
	ham[7][12] = 0.
	ham[8][0] = 0.
	ham[8][1] = 0.
	ham[8][2] = 0.
	ham[8][3] = 0.
	ham[8][4] = 3.2385458162049954*x0 + 2.663963647892094*x0*x1 - 3.2385458162049954*x0*np.abs(x1)
	ham[8][5] = 0.
	ham[8][6] = 0.
	ham[8][7] = 0.
	ham[8][8] = 0.848190570910832*x0 + 0.4186228589544719*x0*x1 - 0.848190570910832*x0*np.abs(x1)
	ham[8][9] = 0.
	ham[8][10] = 0.
	ham[8][11] = 0.
	ham[8][12] = -4.002949763754913*x0 + 0.8467064217932224*x0*x1 + 4.002949763754913*x0*np.abs(x1)
	ham[9][0] = 0.
	ham[9][1] = 0.
	ham[9][2] = 0.
	ham[9][3] = 0.
	ham[9][4] = 0.
	ham[9][5] = 2.1335793929201725*x0 + 2.527257819368949*x0*x1 - 2.1335793929201725*x0*np.abs(x1)
	ham[9][6] = 0.
	ham[9][7] = 0.
	ham[9][8] = 0.
	ham[9][9] = 1.657827024962081*x0 - 2.0550576712310438*x0*x1 - 1.657827024962081*x0*np.abs(x1)
	ham[9][10] = 0.
	ham[9][11] = 0.
	ham[9][12] = 0.
	ham[10][0] = 0.
	ham[10][1] = 0.
	ham[10][2] = 0.
	ham[10][3] = 0.
	ham[10][4] = 0.
	ham[10][5] = 0.
	ham[10][6] = -0.577025184552822*x0 + 2.1359226988355804*x0*x1 + 0.577025184552822*x0*np.abs(x1)
	ham[10][7] = 0.
	ham[10][8] = 0.
	ham[10][9] = 0.
	ham[10][10] = 0.30843293487666623*x0 - 3.6534358599663004*x0*x1 - 0.30843293487666623*x0*np.abs(x1)
	ham[10][11] = 0.
	ham[10][12] = 0.
	ham[11][0] = 0.
	ham[11][1] = 0.
	ham[11][2] = 0.
	ham[11][3] = 0.
	ham[11][4] = 0.
	ham[11][5] = 0.
	ham[11][6] = 0.
	ham[11][7] = -3.288758823252812*x0 + 1.545867356002106*x0*x1 + 3.288758823252812*x0*np.abs(x1)
	ham[11][8] = 0.
	ham[11][9] = 0.
	ham[11][10] = 0.
	ham[11][11] = -2.12047642727708*x0 - 2.5117371537268314*x0*x1 + 2.12047642727708*x0*np.abs(x1)
	ham[11][12] = 0.
	ham[12][0] = 0.
	ham[12][1] = 0.
	ham[12][2] = 0.
	ham[12][3] = 0.
	ham[12][4] = 0.
	ham[12][5] = 0.
	ham[12][6] = 0.
	ham[12][7] = 0.
	ham[12][8] = -4.002949763754913*x0 + 0.8467064217932224*x0*x1 + 4.002949763754913*x0*np.abs(x1)
	ham[12][9] = 0.
	ham[12][10] = 0.
	ham[12][11] = 0.
	ham[12][12] = 0.848190570910832*x0 + 3.767605730590247*x0*x1 - 0.848190570910832*x0*np.abs(x1)
	return ham
# Module creates crystal field Hamiltonian matrix for point group (PG) Oh and J=4.
# Number of crystal field variables is 2: {x0, x1}.
import numpy as np
def ham_cr_PG_Oh_J_8(x0, x1):
	J = 8.
	dim=int(2*J+1)
	ham = np.arange(dim*dim, dtype=np.float)
	ham = ham.reshape(dim,dim)
	ham[0][0] = 1.4803570188057285*x0 + 5.209640186922028*x0*x1 - 1.4803570188057285*x0*np.abs(x1)
	ham[0][1] = 0.
	ham[0][2] = 0.
	ham[0][3] = 0.
	ham[0][4] = -3.6435108926300686*x0 + 0.6105792475542055*x0*x1 + 3.6435108926300686*x0*np.abs(x1)
	ham[0][5] = 0.
	ham[0][6] = 0.
	ham[0][7] = 0.
	ham[0][8] = 0.
	ham[0][9] = 0.
	ham[0][10] = 0.
	ham[0][11] = 0.
	ham[0][12] = 0.
	ham[0][13] = 0.
	ham[0][14] = 0.
	ham[0][15] = 0.
	ham[0][16] = 0.
	ham[1][0] = 0.
	ham[1][1] = -2.4055801555593086*x0 - 1.302410046730507*x0*x1 + 2.4055801555593086*x0*np.abs(x1)
	ham[1][2] = 0.
	ham[1][3] = 0.
	ham[1][4] = 0.
	ham[1][5] = -4.468564719479166*x0 + 1.1823816286586466*x0*x1 + 4.468564719479166*x0*np.abs(x1)
	ham[1][6] = 0.
	ham[1][7] = 0.
	ham[1][8] = 0.
	ham[1][9] = 0.
	ham[1][10] = 0.
	ham[1][11] = 0.
	ham[1][12] = 0.
	ham[1][13] = 0.
	ham[1][14] = 0.
	ham[1][15] = 0.
	ham[1][16] = 0.
	ham[2][0] = 0.
	ham[2][1] = 0.
	ham[2][2] = -1.1102677641042962*x0 - 3.907230140191521*x0*x1 + 1.1102677641042962*x0*np.abs(x1)
	ham[2][3] = 0.
	ham[2][4] = 0.
	ham[2][5] = 0.
	ham[2][6] = -3.48839609600952*x0 + 1.7537553691255923*x0*x1 + 3.48839609600952*x0*np.abs(x1)
	ham[2][7] = 0.
	ham[2][8] = 0.
	ham[2][9] = 0.
	ham[2][10] = 0.
	ham[2][11] = 0.
	ham[2][12] = 0.
	ham[2][13] = 0.
	ham[2][14] = 0.
	ham[2][15] = 0.
	ham[2][16] = 0.
	ham[3][0] = 0.
	ham[3][1] = 0.
	ham[3][2] = 0.
	ham[3][3] = 0.9252231367535803*x0 - 3.907230140191521*x0*x1 - 0.9252231367535803*x0*np.abs(x1)
	ham[3][4] = 0.
	ham[3][5] = 0.
	ham[3][6] = 0.
	ham[3][7] = -1.3510499984819841*x0 + 2.264088445981753*x0*x1 + 1.3510499984819841*x0*np.abs(x1)
	ham[3][8] = 0.
	ham[3][9] = 0.
	ham[3][10] = 0.
	ham[3][11] = 0.
	ham[3][12] = 0.
	ham[3][13] = 0.
	ham[3][14] = 0.
	ham[3][15] = 0.
	ham[3][16] = 0.
	ham[4][0] = -3.6435108926300686*x0 + 0.6105792475542055*x0*x1 + 3.6435108926300686*x0*np.abs(x1)
	ham[4][1] = 0.
	ham[4][2] = 0.
	ham[4][3] = 0.
	ham[4][4] = 1.821977869299358*x0 - 2.404449317040936*x0*x1 - 1.821977869299358*x0*np.abs(x1)
	ham[4][5] = 0.
	ham[4][6] = 0.
	ham[4][7] = 0.
	ham[4][8] = 1.0598508163229445*x0 + 2.664145653821751*x0*x1 - 1.0598508163229445*x0*np.abs(x1)
	ham[4][9] = 0.
	ham[4][10] = 0.
	ham[4][11] = 0.
	ham[4][12] = 0.
	ham[4][13] = 0.
	ham[4][14] = 0.
	ham[4][15] = 0.
	ham[4][16] = 0.
	ham[5][0] = 0.
	ham[5][1] = -4.468564719479166*x0 + 1.1823816286586466*x0*x1 + 4.468564719479166*x0*np.abs(x1)
	ham[5][2] = 0.
	ham[5][3] = 0.
	ham[5][4] = 0.
	ham[5][5] = 1.3237807956628147*x0 - 0.300556164630117*x0*x1 - 1.3237807956628147*x0*np.abs(x1)
	ham[5][6] = 0.
	ham[5][7] = 0.
	ham[5][8] = 0.
	ham[5][9] = 2.902520998451706*x0 + 2.9184253421550457*x0*x1 - 2.902520998451706*x0*np.abs(x1)
	ham[5][10] = 0.
	ham[5][11] = 0.
	ham[5][12] = 0.
	ham[5][13] = 0.
	ham[5][14] = 0.
	ham[5][15] = 0.
	ham[5][16] = 0.
	ham[6][0] = 0.
	ham[6][1] = 0.
	ham[6][2] = -3.48839609600952*x0 + 1.7537553691255923*x0*x1 + 3.48839609600952*x0*np.abs(x1)
	ham[6][3] = 0.
	ham[6][4] = 0.
	ham[6][5] = 0.
	ham[6][6] = 0.02846840420780247*x0 + 1.703151599570663*x0*x1 - 0.02846840420780247*x0*np.abs(x1)
	ham[6][7] = 0.
	ham[6][8] = 0.
	ham[6][9] = 0.
	ham[6][10] = 3.587018930183111*x0 + 3.0055616463011696*x0*x1 - 3.587018930183111*x0*np.abs(x1)
	ham[6][11] = 0.
	ham[6][12] = 0.
	ham[6][13] = 0.
	ham[6][14] = 0.
	ham[6][15] = 0.
	ham[6][16] = 0.
	ham[7][0] = 0.
	ham[7][1] = 0.
	ham[7][2] = 0.
	ham[7][3] = -1.3510499984819841*x0 + 2.264088445981753*x0*x1 + 1.3510499984819841*x0*np.abs(x1)
	ham[7][4] = 0.
	ham[7][5] = 0.
	ham[7][6] = 0.
	ham[7][7] = -1.209907178831605*x0 + 3.105747034511209*x0*x1 + 1.209907178831605*x0*np.abs(x1)
	ham[7][8] = 0.
	ham[7][9] = 0.
	ham[7][10] = 0.
	ham[7][11] = 2.902520998451706*x0 + 2.9184253421550457*x0*x1 - 2.902520998451706*x0*np.abs(x1)
	ham[7][12] = 0.
	ham[7][13] = 0.
	ham[7][14] = 0.
	ham[7][15] = 0.
	ham[7][16] = 0.
	ham[8][0] = 0.
	ham[8][1] = 0.
	ham[8][2] = 0.
	ham[8][3] = 0.
	ham[8][4] = 1.0598508163229445*x0 + 2.664145653821751*x0*x1 - 1.0598508163229445*x0*np.abs(x1)
	ham[8][5] = 0.
	ham[8][6] = 0.
	ham[8][7] = 0.
	ham[8][8] = -1.708104252468148*x0 + 3.606673975561404*x0*x1 + 1.708104252468148*x0*np.abs(x1)
	ham[8][9] = 0.
	ham[8][10] = 0.
	ham[8][11] = 0.
	ham[8][12] = 1.0598508163229445*x0 + 2.664145653821751*x0*x1 - 1.0598508163229445*x0*np.abs(x1)
	ham[8][13] = 0.
	ham[8][14] = 0.
	ham[8][15] = 0.
	ham[8][16] = 0.
	ham[9][0] = 0.
	ham[9][1] = 0.
	ham[9][2] = 0.
	ham[9][3] = 0.
	ham[9][4] = 0.
	ham[9][5] = 2.902520998451706*x0 + 2.9184253421550457*x0*x1 - 2.902520998451706*x0*np.abs(x1)
	ham[9][6] = 0.
	ham[9][7] = 0.
	ham[9][8] = 0.
	ham[9][9] = -1.209907178831605*x0 + 3.105747034511209*x0*x1 + 1.209907178831605*x0*np.abs(x1)
	ham[9][10] = 0.
	ham[9][11] = 0.
	ham[9][12] = 0.
	ham[9][13] = -1.3510499984819841*x0 + 2.264088445981753*x0*x1 + 1.3510499984819841*x0*np.abs(x1)
	ham[9][14] = 0.
	ham[9][15] = 0.
	ham[9][16] = 0.
	ham[10][0] = 0.
	ham[10][1] = 0.
	ham[10][2] = 0.
	ham[10][3] = 0.
	ham[10][4] = 0.
	ham[10][5] = 0.
	ham[10][6] = 3.587018930183111*x0 + 3.0055616463011696*x0*x1 - 3.587018930183111*x0*np.abs(x1)
	ham[10][7] = 0.
	ham[10][8] = 0.
	ham[10][9] = 0.
	ham[10][10] = 0.02846840420780247*x0 + 1.703151599570663*x0*x1 - 0.02846840420780247*x0*np.abs(x1)
	ham[10][11] = 0.
	ham[10][12] = 0.
	ham[10][13] = 0.
	ham[10][14] = -3.48839609600952*x0 + 1.7537553691255923*x0*x1 + 3.48839609600952*x0*np.abs(x1)
	ham[10][15] = 0.
	ham[10][16] = 0.
	ham[11][0] = 0.
	ham[11][1] = 0.
	ham[11][2] = 0.
	ham[11][3] = 0.
	ham[11][4] = 0.
	ham[11][5] = 0.
	ham[11][6] = 0.
	ham[11][7] = 2.902520998451706*x0 + 2.9184253421550457*x0*x1 - 2.902520998451706*x0*np.abs(x1)
	ham[11][8] = 0.
	ham[11][9] = 0.
	ham[11][10] = 0.
	ham[11][11] = 1.3237807956628147*x0 - 0.300556164630117*x0*x1 - 1.3237807956628147*x0*np.abs(x1)
	ham[11][12] = 0.
	ham[11][13] = 0.
	ham[11][14] = 0.
	ham[11][15] = -4.468564719479166*x0 + 1.1823816286586466*x0*x1 + 4.468564719479166*x0*np.abs(x1)
	ham[11][16] = 0.
	ham[12][0] = 0.
	ham[12][1] = 0.
	ham[12][2] = 0.
	ham[12][3] = 0.
	ham[12][4] = 0.
	ham[12][5] = 0.
	ham[12][6] = 0.
	ham[12][7] = 0.
	ham[12][8] = 1.0598508163229445*x0 + 2.664145653821751*x0*x1 - 1.0598508163229445*x0*np.abs(x1)
	ham[12][9] = 0.
	ham[12][10] = 0.
	ham[12][11] = 0.
	ham[12][12] = 1.821977869299358*x0 - 2.404449317040936*x0*x1 - 1.821977869299358*x0*np.abs(x1)
	ham[12][13] = 0.
	ham[12][14] = 0.
	ham[12][15] = 0.
	ham[12][16] = -3.6435108926300686*x0 + 0.6105792475542055*x0*x1 + 3.6435108926300686*x0*np.abs(x1)
	ham[13][0] = 0.
	ham[13][1] = 0.
	ham[13][2] = 0.
	ham[13][3] = 0.
	ham[13][4] = 0.
	ham[13][5] = 0.
	ham[13][6] = 0.
	ham[13][7] = 0.
	ham[13][8] = 0.
	ham[13][9] = -1.3510499984819841*x0 + 2.264088445981753*x0*x1 + 1.3510499984819841*x0*np.abs(x1)
	ham[13][10] = 0.
	ham[13][11] = 0.
	ham[13][12] = 0.
	ham[13][13] = 0.9252231367535803*x0 - 3.907230140191521*x0*x1 - 0.9252231367535803*x0*np.abs(x1)
	ham[13][14] = 0.
	ham[13][15] = 0.
	ham[13][16] = 0.
	ham[14][0] = 0.
	ham[14][1] = 0.
	ham[14][2] = 0.
	ham[14][3] = 0.
	ham[14][4] = 0.
	ham[14][5] = 0.
	ham[14][6] = 0.
	ham[14][7] = 0.
	ham[14][8] = 0.
	ham[14][9] = 0.
	ham[14][10] = -3.48839609600952*x0 + 1.7537553691255923*x0*x1 + 3.48839609600952*x0*np.abs(x1)
	ham[14][11] = 0.
	ham[14][12] = 0.
	ham[14][13] = 0.
	ham[14][14] = -1.1102677641042962*x0 - 3.907230140191521*x0*x1 + 1.1102677641042962*x0*np.abs(x1)
	ham[14][15] = 0.
	ham[14][16] = 0.
	ham[15][0] = 0.
	ham[15][1] = 0.
	ham[15][2] = 0.
	ham[15][3] = 0.
	ham[15][4] = 0.
	ham[15][5] = 0.
	ham[15][6] = 0.
	ham[15][7] = 0.
	ham[15][8] = 0.
	ham[15][9] = 0.
	ham[15][10] = 0.
	ham[15][11] = -4.468564719479166*x0 + 1.1823816286586466*x0*x1 + 4.468564719479166*x0*np.abs(x1)
	ham[15][12] = 0.
	ham[15][13] = 0.
	ham[15][14] = 0.
	ham[15][15] = -2.4055801555593086*x0 - 1.302410046730507*x0*x1 + 2.4055801555593086*x0*np.abs(x1)
	ham[15][16] = 0.
	ham[16][0] = 0.
	ham[16][1] = 0.
	ham[16][2] = 0.
	ham[16][3] = 0.
	ham[16][4] = 0.
	ham[16][5] = 0.
	ham[16][6] = 0.
	ham[16][7] = 0.
	ham[16][8] = 0.
	ham[16][9] = 0.
	ham[16][10] = 0.
	ham[16][11] = 0.
	ham[16][12] = -3.6435108926300686*x0 + 0.6105792475542055*x0*x1 + 3.6435108926300686*x0*np.abs(x1)
	ham[16][13] = 0.
	ham[16][14] = 0.
	ham[16][15] = 0.
	ham[16][16] = 1.4803570188057285*x0 + 5.209640186922028*x0*x1 - 1.4803570188057285*x0*np.abs(x1)
	return ham
# Module creates crystal field Hamiltonian matrix for point group (PG) C4v and J=4.
# Number of crystal field variables is 5 (and sign of x5): {x0, x1, x2, x3, x4, sign(x5)}.
def ham_cr_PG_C4v_J_4(x0, x1, x2, x3, x4, x5):
	J = 4
	dim=2*J+1
	ham = np.arange(dim*dim, dtype=np.float)
	ham = ham.reshape(dim,dim)
	ham[0][0] = 4.786344211304794*x0*x1 + 2.8160379844863472*x0*x3 + 0.8090398349558905*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[0][1] = 0.
	ham[0][2] = 0.
	ham[0][3] = 0.
	ham[0][4] = 1.991239554909194*x0*x2 + 3.837612894400988*x0*x4
	ham[0][5] = 0.
	ham[0][6] = 0.
	ham[0][7] = 0.
	ham[0][8] = 0.
	ham[1][0] = 0.
	ham[1][1] = 1.1965860528261985*x0*x1 - 4.224056976729521*x0*x3 - 3.438419298562535*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[1][2] = 0.
	ham[1][3] = 0.
	ham[1][4] = 0.
	ham[1][5] = 3.1484261802664855*x0*x2 - 0.6067798762169179*x0*x4
	ham[1][6] = 0.
	ham[1][7] = 0.
	ham[1][8] = 0.
	ham[2][0] = 0.
	ham[2][1] = 0.
	ham[2][2] = -1.3675269175156552*x0*x1 - 2.2126012735249874*x0*x3 + 4.449719092257398*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[2][3] = 0.
	ham[2][4] = 0.
	ham[2][5] = 0.
	ham[2][6] = 3.5699797260986297*x0*x2 - 3.2107773060570404*x0*x4
	ham[2][7] = 0.
	ham[2][8] = 0.
	ham[3][0] = 0.
	ham[3][1] = 0.
	ham[3][2] = 0.
	ham[3][3] = -2.9059946997207677*x0*x1 + 1.8103101328840805*x0*x3 + 0.20225995873897262*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[3][4] = 0.
	ham[3][5] = 0.
	ham[3][6] = 0.
	ham[3][7] = 3.1484261802664855*x0*x2 - 0.6067798762169179*x0*x4
	ham[3][8] = 0.
	ham[4][0] = 1.991239554909194*x0*x2 + 3.837612894400988*x0*x4
	ham[4][1] = 0.
	ham[4][2] = 0.
	ham[4][3] = 0.
	ham[4][4] = -3.4188172937891386*x0*x1 + 3.620620265768161*x0*x3 - 4.0451991747794525*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[4][5] = 0.
	ham[4][6] = 0.
	ham[4][7] = 0.
	ham[4][8] = 1.991239554909194*x0*x2 + 3.837612894400988*x0*x4
	ham[5][0] = 0.
	ham[5][1] = 3.1484261802664855*x0*x2 - 0.6067798762169179*x0*x4
	ham[5][2] = 0.
	ham[5][3] = 0.
	ham[5][4] = 0.
	ham[5][5] = -2.9059946997207677*x0*x1 + 1.8103101328840805*x0*x3 + 0.20225995873897262*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[5][6] = 0.
	ham[5][7] = 0.
	ham[5][8] = 0.
	ham[6][0] = 0.
	ham[6][1] = 0.
	ham[6][2] = 3.5699797260986297*x0*x2 - 3.2107773060570404*x0*x4
	ham[6][3] = 0.
	ham[6][4] = 0.
	ham[6][5] = 0.
	ham[6][6] = -1.3675269175156552*x0*x1 - 2.2126012735249874*x0*x3 + 4.449719092257398*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[6][7] = 0.
	ham[6][8] = 0.
	ham[7][0] = 0.
	ham[7][1] = 0.
	ham[7][2] = 0.
	ham[7][3] = 3.1484261802664855*x0*x2 - 0.6067798762169179*x0*x4
	ham[7][4] = 0.
	ham[7][5] = 0.
	ham[7][6] = 0.
	ham[7][7] = 1.1965860528261985*x0*x1 - 4.224056976729521*x0*x3 - 3.438419298562535*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[7][8] = 0.
	ham[8][0] = 0.
	ham[8][1] = 0.
	ham[8][2] = 0.
	ham[8][3] = 0.
	ham[8][4] = 1.991239554909194*x0*x2 + 3.837612894400988*x0*x4
	ham[8][5] = 0.
	ham[8][6] = 0.
	ham[8][7] = 0.
	ham[8][8] = 4.786344211304794*x0*x1 + 2.8160379844863472*x0*x3 + 0.8090398349558905*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	return ham# Module creates crystal field Hamiltonian matrix for point group (PG) C4v and J=4.
# Number of crystal field variables is 5 (and sign of x5): {x0, x1, x2, x3, x4, sign(x5)}.
def ham_cr_PG_C4v_J_3_5(x0, x1, x2, x3, x4, x5):
	J = 3.5
	dim=int(2*J+1)
	ham = np.arange(dim*dim, dtype=np.float)
	ham = ham.reshape(dim,dim)
	ham[0][0] = 4.320493798938574*x0*x1 + 2.256304299271065*x0*x3 + 0.49236596391733095*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[0][1] = 0.
	ham[0][2] = 0.
	ham[0][3] = 0.
	ham[0][4] = 2.256304299271065*x0*x2 + 3.302891295379082*x0*x4
	ham[0][5] = 0.
	ham[0][6] = 0.
	ham[0][7] = 0.
	ham[1][0] = 0.
	ham[1][1] = 0.6172133998483676*x0*x1 - 4.190279412931978*x0*x3 - 2.461829819586655*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[1][2] = 0.
	ham[1][3] = 0.
	ham[1][4] = 0.
	ham[1][5] = 3.302891295379082*x0*x2 - 2.256304299271065*x0*x4
	ham[1][6] = 0.
	ham[1][7] = 0.
	ham[2][0] = 0.
	ham[2][1] = 0.
	ham[2][2] = -1.8516401995451028*x0*x1 - 0.9669875568304563*x0*x3 + 4.431293675255978*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[2][3] = 0.
	ham[2][4] = 0.
	ham[2][5] = 0.
	ham[2][6] = 3.302891295379082*x0*x2 - 2.256304299271065*x0*x4
	ham[2][7] = 0.
	ham[3][0] = 0.
	ham[3][1] = 0.
	ham[3][2] = 0.
	ham[3][3] = -3.0860669992418384*x0*x1 + 2.900962670491369*x0*x3 - 2.461829819586655*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[3][4] = 0.
	ham[3][5] = 0.
	ham[3][6] = 0.
	ham[3][7] = 2.256304299271065*x0*x2 + 3.302891295379082*x0*x4
	ham[4][0] = 2.256304299271065*x0*x2 + 3.302891295379082*x0*x4
	ham[4][1] = 0.
	ham[4][2] = 0.
	ham[4][3] = 0.
	ham[4][4] = -3.0860669992418384*x0*x1 + 2.900962670491369*x0*x3 - 2.461829819586655*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[4][5] = 0.
	ham[4][6] = 0.
	ham[4][7] = 0.
	ham[5][0] = 0.
	ham[5][1] = 3.302891295379082*x0*x2 - 2.256304299271065*x0*x4
	ham[5][2] = 0.
	ham[5][3] = 0.
	ham[5][4] = 0.
	ham[5][5] = -1.8516401995451028*x0*x1 - 0.9669875568304563*x0*x3 + 4.431293675255978*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[5][6] = 0.
	ham[5][7] = 0.
	ham[6][0] = 0.
	ham[6][1] = 0.
	ham[6][2] = 3.302891295379082*x0*x2 - 2.256304299271065*x0*x4
	ham[6][3] = 0.
	ham[6][4] = 0.
	ham[6][5] = 0.
	ham[6][6] = 0.6172133998483676*x0*x1 - 4.190279412931978*x0*x3 - 2.461829819586655*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[6][7] = 0.
	ham[7][0] = 0.
	ham[7][1] = 0.
	ham[7][2] = 0.
	ham[7][3] = 2.256304299271065*x0*x2 + 3.302891295379082*x0*x4
	ham[7][4] = 0.
	ham[7][5] = 0.
	ham[7][6] = 0.
	ham[7][7] = 4.320493798938574*x0*x1 + 2.256304299271065*x0*x3 + 0.49236596391733095*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	return ham
# Module creates crystal field Hamiltonian matrix for point group (PG) C4v and J=4.
# Number of crystal field variables is 5 (and sign of x5): {x0, x1, x2, x3, x4, sign(x5)}.
def ham_cr_PG_C4v_J_7_5(x0, x1, x2, x3, x4, x5):
	J = 7.5
	dim = int(2*J+1)
	ham = np.arange(dim*dim, dtype=np.float)
	ham = ham.reshape(dim,dim)
	ham[0][0] = 7.409585736349484*x0*x1 + 6.36943164204817*x0*x3 + 3.7353083379786685*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[0][1] = 0.
	ham[0][2] = 0.
	ham[0][3] = 0.
	ham[0][4] = 1.0199253296288782*x0*x2 + 4.012364789925057*x0*x4
	ham[0][5] = 0.
	ham[0][6] = 0.
	ham[0][7] = 0.
	ham[0][8] = 0.
	ham[0][9] = 0.
	ham[0][10] = 0.
	ham[0][11] = 0.
	ham[0][12] = 0.
	ham[0][13] = 0.
	ham[0][14] = 0.
	ham[0][15] = 0.
	ham[1][0] = 0.
	ham[1][1] = 4.445751441809691*x0*x1 - 2.1231438806827234*x0*x3 - 6.723555008361603*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[1][2] = 0.
	ham[1][3] = 0.
	ham[1][4] = 0.
	ham[1][5] = 1.9530083169480132*x0*x2 + 4.6098561792975765*x0*x4
	ham[1][6] = 0.
	ham[1][7] = 0.
	ham[1][8] = 0.
	ham[1][9] = 0.
	ham[1][10] = 0.
	ham[1][11] = 0.
	ham[1][12] = 0.
	ham[1][13] = 0.
	ham[1][14] = 0.
	ham[1][15] = 0.
	ham[2][0] = 0.
	ham[2][1] = 0.
	ham[2][2] = 1.9053220464898675*x0*x1 - 5.156206567372329*x0*x3 - 2.241185002787201*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[2][3] = 0.
	ham[2][4] = 0.
	ham[2][5] = 0.
	ham[2][6] = 2.8589114384679872*x0*x2 + 3.149131287161126*x0*x4
	ham[2][7] = 0.
	ham[2][8] = 0.
	ham[2][9] = 0.
	ham[2][10] = 0.
	ham[2][11] = 0.
	ham[2][12] = 0.
	ham[2][13] = 0.
	ham[2][14] = 0.
	ham[2][15] = 0.
	ham[3][0] = 0.
	ham[3][1] = 0.
	ham[3][2] = 0.
	ham[3][3] = -0.21170244960998524*x0*x1 - 4.6895815386508515*x0*x3 + 3.390510645242176*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[3][4] = 0.
	ham[3][5] = 0.
	ham[3][6] = 0.
	ham[3][7] = 3.6336130236474533*x0*x2 + 0.5717822876935974*x0*x4
	ham[3][8] = 0.
	ham[3][9] = 0.
	ham[3][10] = 0.
	ham[3][11] = 0.
	ham[3][12] = 0.
	ham[3][13] = 0.
	ham[3][14] = 0.
	ham[3][15] = 0.
	ham[4][0] = 1.0199253296288782*x0*x2 + 4.012364789925057*x0*x4
	ham[4][1] = 0.
	ham[4][2] = 0.
	ham[4][3] = 0.
	ham[4][4] = -1.9053220464898675*x0*x1 - 2.3564563950434625*x0*x3 + 4.999566544679141*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[4][5] = 0.
	ham[4][6] = 0.
	ham[4][7] = 0.
	ham[4][8] = 4.195734914667574*x0*x2 - 1.9807119463065512*x0*x4
	ham[4][9] = 0.
	ham[4][10] = 0.
	ham[4][11] = 0.
	ham[4][12] = 0.
	ham[4][13] = 0.
	ham[4][14] = 0.
	ham[4][15] = 0.
	ham[5][0] = 0.
	ham[5][1] = 1.9530083169480132*x0*x2 + 4.6098561792975765*x0*x4
	ham[5][2] = 0.
	ham[5][3] = 0.
	ham[5][4] = 0.
	ham[5][5] = -3.175536744149779*x0*x1 + 0.5366187830296993*x0*x3 + 2.5859826955236933*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[5][6] = 0.
	ham[5][7] = 0.
	ham[5][8] = 0.
	ham[5][9] = 4.490523482081941*x0*x2 - 3.533124981687304*x0*x4
	ham[5][10] = 0.
	ham[5][11] = 0.
	ham[5][12] = 0.
	ham[5][13] = 0.
	ham[5][14] = 0.
	ham[5][15] = 0.
	ham[6][0] = 0.
	ham[6][1] = 0.
	ham[6][2] = 2.8589114384679872*x0*x2 + 3.149131287161126*x0*x4
	ham[6][3] = 0.
	ham[6][4] = 0.
	ham[6][5] = 0.
	ham[6][6] = -4.02234654258972*x0*x1 + 3.0097314352535314*x0*x3 - 1.4366570530687186*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[6][7] = 0.
	ham[6][8] = 0.
	ham[6][9] = 0.
	ham[6][10] = 4.490523482081941*x0*x2 - 3.533124981687304*x0*x4
	ham[6][11] = 0.
	ham[6][12] = 0.
	ham[6][13] = 0.
	ham[6][14] = 0.
	ham[6][15] = 0.
	ham[7][0] = 0.
	ham[7][1] = 0.
	ham[7][2] = 0.
	ham[7][3] = 3.6336130236474533*x0*x2 + 0.5717822876935974*x0*x4
	ham[7][4] = 0.
	ham[7][5] = 0.
	ham[7][6] = 0.
	ham[7][7] = -4.445751441809691*x0*x1 + 4.409606521417964*x0*x3 - 4.309971159206156*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[7][8] = 0.
	ham[7][9] = 0.
	ham[7][10] = 0.
	ham[7][11] = 4.195734914667574*x0*x2 - 1.9807119463065512*x0*x4
	ham[7][12] = 0.
	ham[7][13] = 0.
	ham[7][14] = 0.
	ham[7][15] = 0.
	ham[8][0] = 0.
	ham[8][1] = 0.
	ham[8][2] = 0.
	ham[8][3] = 0.
	ham[8][4] = 4.195734914667574*x0*x2 - 1.9807119463065512*x0*x4
	ham[8][5] = 0.
	ham[8][6] = 0.
	ham[8][7] = 0.
	ham[8][8] = -4.445751441809691*x0*x1 + 4.409606521417964*x0*x3 - 4.309971159206156*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[8][9] = 0.
	ham[8][10] = 0.
	ham[8][11] = 0.
	ham[8][12] = 3.6336130236474533*x0*x2 + 0.5717822876935974*x0*x4
	ham[8][13] = 0.
	ham[8][14] = 0.
	ham[8][15] = 0.
	ham[9][0] = 0.
	ham[9][1] = 0.
	ham[9][2] = 0.
	ham[9][3] = 0.
	ham[9][4] = 0.
	ham[9][5] = 4.490523482081941*x0*x2 - 3.533124981687304*x0*x4
	ham[9][6] = 0.
	ham[9][7] = 0.
	ham[9][8] = 0.
	ham[9][9] = -4.02234654258972*x0*x1 + 3.0097314352535314*x0*x3 - 1.4366570530687186*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[9][10] = 0.
	ham[9][11] = 0.
	ham[9][12] = 0.
	ham[9][13] = 2.8589114384679872*x0*x2 + 3.149131287161126*x0*x4
	ham[9][14] = 0.
	ham[9][15] = 0.
	ham[10][0] = 0.
	ham[10][1] = 0.
	ham[10][2] = 0.
	ham[10][3] = 0.
	ham[10][4] = 0.
	ham[10][5] = 0.
	ham[10][6] = 4.490523482081941*x0*x2 - 3.533124981687304*x0*x4
	ham[10][7] = 0.
	ham[10][8] = 0.
	ham[10][9] = 0.
	ham[10][10] = -3.175536744149779*x0*x1 + 0.5366187830296993*x0*x3 + 2.5859826955236933*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[10][11] = 0.
	ham[10][12] = 0.
	ham[10][13] = 0.
	ham[10][14] = 1.9530083169480132*x0*x2 + 4.6098561792975765*x0*x4
	ham[10][15] = 0.
	ham[11][0] = 0.
	ham[11][1] = 0.
	ham[11][2] = 0.
	ham[11][3] = 0.
	ham[11][4] = 0.
	ham[11][5] = 0.
	ham[11][6] = 0.
	ham[11][7] = 4.195734914667574*x0*x2 - 1.9807119463065512*x0*x4
	ham[11][8] = 0.
	ham[11][9] = 0.
	ham[11][10] = 0.
	ham[11][11] = -1.9053220464898675*x0*x1 - 2.3564563950434625*x0*x3 + 4.999566544679141*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[11][12] = 0.
	ham[11][13] = 0.
	ham[11][14] = 0.
	ham[11][15] = 1.0199253296288782*x0*x2 + 4.012364789925057*x0*x4
	ham[12][0] = 0.
	ham[12][1] = 0.
	ham[12][2] = 0.
	ham[12][3] = 0.
	ham[12][4] = 0.
	ham[12][5] = 0.
	ham[12][6] = 0.
	ham[12][7] = 0.
	ham[12][8] = 3.6336130236474533*x0*x2 + 0.5717822876935974*x0*x4
	ham[12][9] = 0.
	ham[12][10] = 0.
	ham[12][11] = 0.
	ham[12][12] = -0.21170244960998524*x0*x1 - 4.6895815386508515*x0*x3 + 3.390510645242176*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[12][13] = 0.
	ham[12][14] = 0.
	ham[12][15] = 0.
	ham[13][0] = 0.
	ham[13][1] = 0.
	ham[13][2] = 0.
	ham[13][3] = 0.
	ham[13][4] = 0.
	ham[13][5] = 0.
	ham[13][6] = 0.
	ham[13][7] = 0.
	ham[13][8] = 0.
	ham[13][9] = 2.8589114384679872*x0*x2 + 3.149131287161126*x0*x4
	ham[13][10] = 0.
	ham[13][11] = 0.
	ham[13][12] = 0.
	ham[13][13] = 1.9053220464898675*x0*x1 - 5.156206567372329*x0*x3 - 2.241185002787201*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[13][14] = 0.
	ham[13][15] = 0.
	ham[14][0] = 0.
	ham[14][1] = 0.
	ham[14][2] = 0.
	ham[14][3] = 0.
	ham[14][4] = 0.
	ham[14][5] = 0.
	ham[14][6] = 0.
	ham[14][7] = 0.
	ham[14][8] = 0.
	ham[14][9] = 0.
	ham[14][10] = 1.9530083169480132*x0*x2 + 4.6098561792975765*x0*x4
	ham[14][11] = 0.
	ham[14][12] = 0.
	ham[14][13] = 0.
	ham[14][14] = 4.445751441809691*x0*x1 - 2.1231438806827234*x0*x3 - 6.723555008361603*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[14][15] = 0.
	ham[15][0] = 0.
	ham[15][1] = 0.
	ham[15][2] = 0.
	ham[15][3] = 0.
	ham[15][4] = 0.
	ham[15][5] = 0.
	ham[15][6] = 0.
	ham[15][7] = 0.
	ham[15][8] = 0.
	ham[15][9] = 0.
	ham[15][10] = 0.
	ham[15][11] = 1.0199253296288782*x0*x2 + 4.012364789925057*x0*x4
	ham[15][12] = 0.
	ham[15][13] = 0.
	ham[15][14] = 0.
	ham[15][15] = 7.409585736349484*x0*x1 + 6.36943164204817*x0*x3 + 3.7353083379786685*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	return ham
# Module creates crystal field Hamiltonian matrix for point group (PG) C4v and J=4.
# Number of crystal field variables is 5 (and sign of x5): {x0, x1, x2, x3, x4, sign(x5)}.
def ham_cr_PG_C4v_J_6(x0, x1, x2, x3, x4, x5):
	J = 6.
	dim = int(2*J+1)
	ham = np.arange(dim*dim, dtype=np.float)
	ham = ham.reshape(dim,dim)
	ham[0][0] = 6.391959234627741*x0*x1 + 4.932953842622631*x0*x3 + 2.3990452177181543*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[0][1] = 0.
	ham[0][2] = 0.
	ham[0][3] = 0.
	ham[0][4] = 1.3117119482928092*x0*x2 + 4.279333300696735*x0*x4
	ham[0][5] = 0.
	ham[0][6] = 0.
	ham[0][7] = 0.
	ham[0][8] = 0.
	ham[0][9] = 0.
	ham[0][10] = 0.
	ham[0][11] = 0.
	ham[0][12] = 0.
	ham[1][0] = 0.
	ham[1][1] = 3.1959796173138706*x0*x1 - 3.288635895081754*x0*x3 - 5.997613044295385*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[1][2] = 0.
	ham[1][3] = 0.
	ham[1][4] = 0.
	ham[1][5] = 2.394847410096739*x0*x2 + 3.5158310698119597*x0*x4
	ham[1][6] = 0.
	ham[1][7] = 0.
	ham[1][8] = 0.
	ham[1][9] = 0.
	ham[1][10] = 0.
	ham[1][11] = 0.
	ham[1][12] = 0.
	ham[2][0] = 0.
	ham[2][1] = 0.
	ham[2][2] = 0.5810872031479765*x0*x1 - 4.783470392846187*x0*x3 + 0.872380079170238*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[2][3] = 0.
	ham[2][4] = 0.
	ham[2][5] = 0.
	ham[2][6] = 3.3089572165506413*x0*x2 + 0.6168658697533325*x0*x4
	ham[2][7] = 0.
	ham[2][8] = 0.
	ham[2][9] = 0.
	ham[2][10] = 0.
	ham[2][11] = 0.
	ham[2][12] = 0.
	ham[3][0] = 0.
	ham[3][1] = 0.
	ham[3][2] = 0.
	ham[3][3] = -1.452718007869941*x0*x1 - 2.6907020959759804*x0*x3 + 4.689042925540029*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[3][4] = 0.
	ham[3][5] = 0.
	ham[3][6] = 0.
	ham[3][7] = 3.9152109783953652*x0*x2 - 2.280892313082407*x0*x4
	ham[3][8] = 0.
	ham[3][9] = 0.
	ham[3][10] = 0.
	ham[3][11] = 0.
	ham[3][12] = 0.
	ham[4][0] = 1.3117119482928092*x0*x2 + 4.279333300696735*x0*x4
	ham[4][1] = 0.
	ham[4][2] = 0.
	ham[4][3] = 0.
	ham[4][4] = -2.905436015739882*x0*x1 + 0.5481059825136256*x0*x3 + 2.3990452177181543*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[4][5] = 0.
	ham[4][6] = 0.
	ham[4][7] = 0.
	ham[4][8] = 4.126994737275215*x0*x2 - 3.462151107316932*x0*x4
	ham[4][9] = 0.
	ham[4][10] = 0.
	ham[4][11] = 0.
	ham[4][12] = 0.
	ham[5][0] = 0.
	ham[5][1] = 2.394847410096739*x0*x2 + 3.5158310698119597*x0*x4
	ham[5][2] = 0.
	ham[5][3] = 0.
	ham[5][4] = 0.
	ham[5][5] = -3.777066820461847*x0*x1 + 3.1889802618974583*x0*x3 - 2.1809501979255947*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[5][6] = 0.
	ham[5][7] = 0.
	ham[5][8] = 0.
	ham[5][9] = 3.9152109783953652*x0*x2 - 2.280892313082407*x0*x4
	ham[5][10] = 0.
	ham[5][11] = 0.
	ham[5][12] = 0.
	ham[6][0] = 0.
	ham[6][1] = 0.
	ham[6][2] = 3.3089572165506413*x0*x2 + 0.6168658697533325*x0*x4
	ham[6][3] = 0.
	ham[6][4] = 0.
	ham[6][5] = 0.
	ham[6][6] = -4.067610422035836*x0*x1 + 4.185536593740414*x0*x3 - 4.3619003958511895*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[6][7] = 0.
	ham[6][8] = 0.
	ham[6][9] = 0.
	ham[6][10] = 3.3089572165506413*x0*x2 + 0.6168658697533325*x0*x4
	ham[6][11] = 0.
	ham[6][12] = 0.
	ham[7][0] = 0.
	ham[7][1] = 0.
	ham[7][2] = 0.
	ham[7][3] = 3.9152109783953652*x0*x2 - 2.280892313082407*x0*x4
	ham[7][4] = 0.
	ham[7][5] = 0.
	ham[7][6] = 0.
	ham[7][7] = -3.777066820461847*x0*x1 + 3.1889802618974583*x0*x3 - 2.1809501979255947*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[7][8] = 0.
	ham[7][9] = 0.
	ham[7][10] = 0.
	ham[7][11] = 2.394847410096739*x0*x2 + 3.5158310698119597*x0*x4
	ham[7][12] = 0.
	ham[8][0] = 0.
	ham[8][1] = 0.
	ham[8][2] = 0.
	ham[8][3] = 0.
	ham[8][4] = 4.126994737275215*x0*x2 - 3.462151107316932*x0*x4
	ham[8][5] = 0.
	ham[8][6] = 0.
	ham[8][7] = 0.
	ham[8][8] = -2.905436015739882*x0*x1 + 0.5481059825136256*x0*x3 + 2.3990452177181543*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[8][9] = 0.
	ham[8][10] = 0.
	ham[8][11] = 0.
	ham[8][12] = 1.3117119482928092*x0*x2 + 4.279333300696735*x0*x4
	ham[9][0] = 0.
	ham[9][1] = 0.
	ham[9][2] = 0.
	ham[9][3] = 0.
	ham[9][4] = 0.
	ham[9][5] = 3.9152109783953652*x0*x2 - 2.280892313082407*x0*x4
	ham[9][6] = 0.
	ham[9][7] = 0.
	ham[9][8] = 0.
	ham[9][9] = -1.452718007869941*x0*x1 - 2.6907020959759804*x0*x3 + 4.689042925540029*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[9][10] = 0.
	ham[9][11] = 0.
	ham[9][12] = 0.
	ham[10][0] = 0.
	ham[10][1] = 0.
	ham[10][2] = 0.
	ham[10][3] = 0.
	ham[10][4] = 0.
	ham[10][5] = 0.
	ham[10][6] = 3.3089572165506413*x0*x2 + 0.6168658697533325*x0*x4
	ham[10][7] = 0.
	ham[10][8] = 0.
	ham[10][9] = 0.
	ham[10][10] = 0.5810872031479765*x0*x1 - 4.783470392846187*x0*x3 + 0.872380079170238*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[10][11] = 0.
	ham[10][12] = 0.
	ham[11][0] = 0.
	ham[11][1] = 0.
	ham[11][2] = 0.
	ham[11][3] = 0.
	ham[11][4] = 0.
	ham[11][5] = 0.
	ham[11][6] = 0.
	ham[11][7] = 2.394847410096739*x0*x2 + 3.5158310698119597*x0*x4
	ham[11][8] = 0.
	ham[11][9] = 0.
	ham[11][10] = 0.
	ham[11][11] = 3.1959796173138706*x0*x1 - 3.288635895081754*x0*x3 - 5.997613044295385*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[11][12] = 0.
	ham[12][0] = 0.
	ham[12][1] = 0.
	ham[12][2] = 0.
	ham[12][3] = 0.
	ham[12][4] = 0.
	ham[12][5] = 0.
	ham[12][6] = 0.
	ham[12][7] = 0.
	ham[12][8] = 1.3117119482928092*x0*x2 + 4.279333300696735*x0*x4
	ham[12][9] = 0.
	ham[12][10] = 0.
	ham[12][11] = 0.
	ham[12][12] = 6.391959234627741*x0*x1 + 4.932953842622631*x0*x3 + 2.3990452177181543*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	return ham
# Module creates crystal field Hamiltonian matrix for point group (PG) C4v and J=4.
# Number of crystal field variables is 5 (and sign of x5): {x0, x1, x2, x3, x4, sign(x5)}.
def ham_cr_PG_C4v_J_8(x0, x1, x2, x3, x4, x5):
	J = 8.
	dim = int(2*J+1)
	ham = np.arange(dim*dim, dtype=np.float)
	ham = ham.reshape(dim,dim)
	ham[0][0] = 7.72328445721233*x0*x1 + 6.821020142872595*x0*x3 + 4.1870819462985285*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[0][1] = 0.
	ham[0][2] = 0.
	ham[0][3] = 0.
	ham[0][4] = 0.9459053029269173*x0*x2 + 3.8950769843430324*x0*x4
	ham[0][5] = 0.
	ham[0][6] = 0.
	ham[0][7] = 0.
	ham[0][8] = 0.
	ham[0][9] = 0.
	ham[0][10] = 0.
	ham[0][11] = 0.
	ham[0][12] = 0.
	ham[0][13] = 0.
	ham[0][14] = 0.
	ham[0][15] = 0.
	ham[0][16] = 0.
	ham[1][0] = 0.
	ham[1][1] = 4.827052785757706*x0*x1 - 1.7052550357181488*x0*x3 - 6.8040081627351086*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[1][2] = 0.
	ham[1][3] = 0.
	ham[1][4] = 0.
	ham[1][5] = 1.8317377426626162*x0*x2 + 4.777096625976184*x0*x4
	ham[1][6] = 0.
	ham[1][7] = 0.
	ham[1][8] = 0.
	ham[1][9] = 0.
	ham[1][10] = 0.
	ham[1][11] = 0.
	ham[1][12] = 0.
	ham[1][13] = 0.
	ham[1][14] = 0.
	ham[1][15] = 0.
	ham[1][16] = 0.
	ham[2][0] = 0.
	ham[2][1] = 0.
	ham[2][2] = 2.3169853371636986*x0*x1 - 5.115765107154447*x0*x3 - 3.140311459723896*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[2][3] = 0.
	ham[2][4] = 0.
	ham[2][5] = 0.
	ham[2][6] = 2.716906135178104*x0*x2 + 3.729252291607829*x0*x4
	ham[2][7] = 0.
	ham[2][8] = 0.
	ham[2][9] = 0.
	ham[2][10] = 0.
	ham[2][11] = 0.
	ham[2][12] = 0.
	ham[2][13] = 0.
	ham[2][14] = 0.
	ham[2][15] = 0.
	ham[2][16] = 0.
	ham[3][0] = 0.
	ham[3][1] = 0.
	ham[3][2] = 0.
	ham[3][3] = 0.19308211143030823*x0*x1 - 5.115765107154447*x0*x3 + 2.61692621643658*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[3][4] = 0.
	ham[3][5] = 0.
	ham[3][6] = 0.
	ham[3][7] = 3.5075107382511845*x0*x2 + 1.4443332019202966*x0*x4
	ham[3][8] = 0.
	ham[3][9] = 0.
	ham[3][10] = 0.
	ham[3][11] = 0.
	ham[3][12] = 0.
	ham[3][13] = 0.
	ham[3][14] = 0.
	ham[3][15] = 0.
	ham[3][16] = 0.
	ham[4][0] = 0.9459053029269173*x0*x2 + 3.8950769843430324*x0*x4
	ham[4][1] = 0.
	ham[4][2] = 0.
	ham[4][3] = 0.
	ham[4][4] = -1.5446568914424659*x0*x1 - 3.148163142864275*x0*x3 + 5.153331626213573*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[4][5] = 0.
	ham[4][6] = 0.
	ham[4][7] = 0.
	ham[4][8] = 4.127276699649006*x0*x2 - 1.1330281816494678*x0*x4
	ham[4][9] = 0.
	ham[4][10] = 0.
	ham[4][11] = 0.
	ham[4][12] = 0.
	ham[4][13] = 0.
	ham[4][14] = 0.
	ham[4][15] = 0.
	ham[4][16] = 0.
	ham[5][0] = 0.
	ham[5][1] = 1.8317377426626162*x0*x2 + 4.777096625976184*x0*x4
	ham[5][2] = 0.
	ham[5][3] = 0.
	ham[5][4] = 0.
	ham[5][5] = -2.8962316714546232*x0*x1 - 0.39352039285803436*x0*x3 + 3.7442175096707992*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[5][6] = 0.
	ham[5][7] = 0.
	ham[5][8] = 0.
	ham[5][9] = 4.521205098926469*x0*x2 - 3.1029254668923723*x0*x4
	ham[5][10] = 0.
	ham[5][11] = 0.
	ham[5][12] = 0.
	ham[5][13] = 0.
	ham[5][14] = 0.
	ham[5][15] = 0.
	ham[5][16] = 0.
	ham[6][0] = 0.
	ham[6][1] = 0.
	ham[6][2] = 2.716906135178104*x0*x2 + 3.729252291607829*x0*x4
	ham[6][3] = 0.
	ham[6][4] = 0.
	ham[6][5] = 0.
	ham[6][6] = -3.861642228606165*x0*x1 + 2.2299488928621947*x0*x3 + 0.08052080665958708*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[6][7] = 0.
	ham[6][8] = 0.
	ham[6][9] = 0.
	ham[6][10] = 4.656196080849671*x0*x2 - 3.834684536176457*x0*x4
	ham[6][11] = 0.
	ham[6][12] = 0.
	ham[6][13] = 0.
	ham[6][14] = 0.
	ham[6][15] = 0.
	ham[6][16] = 0.
	ham[7][0] = 0.
	ham[7][1] = 0.
	ham[7][2] = 0.
	ham[7][3] = 3.5075107382511845*x0*x2 + 1.4443332019202966*x0*x4
	ham[7][4] = 0.
	ham[7][5] = 0.
	ham[7][6] = 0.
	ham[7][7] = -4.440888562897089*x0*x1 + 4.066377392866355*x0*x3 - 3.422134283032451*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[7][8] = 0.
	ham[7][9] = 0.
	ham[7][10] = 0.
	ham[7][11] = 4.521205098926469*x0*x2 - 3.1029254668923723*x0*x4
	ham[7][12] = 0.
	ham[7][13] = 0.
	ham[7][14] = 0.
	ham[7][15] = 0.
	ham[7][16] = 0.
	ham[8][0] = 0.
	ham[8][1] = 0.
	ham[8][2] = 0.
	ham[8][3] = 0.
	ham[8][4] = 4.127276699649006*x0*x2 - 1.1330281816494678*x0*x4
	ham[8][5] = 0.
	ham[8][6] = 0.
	ham[8][7] = 0.
	ham[8][8] = -4.633970674327397*x0*x1 + 4.722244714296412*x0*x3 - 4.831248399575225*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[8][9] = 0.
	ham[8][10] = 0.
	ham[8][11] = 0.
	ham[8][12] = 4.127276699649006*x0*x2 - 1.1330281816494678*x0*x4
	ham[8][13] = 0.
	ham[8][14] = 0.
	ham[8][15] = 0.
	ham[8][16] = 0.
	ham[9][0] = 0.
	ham[9][1] = 0.
	ham[9][2] = 0.
	ham[9][3] = 0.
	ham[9][4] = 0.
	ham[9][5] = 4.521205098926469*x0*x2 - 3.1029254668923723*x0*x4
	ham[9][6] = 0.
	ham[9][7] = 0.
	ham[9][8] = 0.
	ham[9][9] = -4.440888562897089*x0*x1 + 4.066377392866355*x0*x3 - 3.422134283032451*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[9][10] = 0.
	ham[9][11] = 0.
	ham[9][12] = 0.
	ham[9][13] = 3.5075107382511845*x0*x2 + 1.4443332019202966*x0*x4
	ham[9][14] = 0.
	ham[9][15] = 0.
	ham[9][16] = 0.
	ham[10][0] = 0.
	ham[10][1] = 0.
	ham[10][2] = 0.
	ham[10][3] = 0.
	ham[10][4] = 0.
	ham[10][5] = 0.
	ham[10][6] = 4.656196080849671*x0*x2 - 3.834684536176457*x0*x4
	ham[10][7] = 0.
	ham[10][8] = 0.
	ham[10][9] = 0.
	ham[10][10] = -3.861642228606165*x0*x1 + 2.2299488928621947*x0*x3 + 0.08052080665958708*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[10][11] = 0.
	ham[10][12] = 0.
	ham[10][13] = 0.
	ham[10][14] = 2.716906135178104*x0*x2 + 3.729252291607829*x0*x4
	ham[10][15] = 0.
	ham[10][16] = 0.
	ham[11][0] = 0.
	ham[11][1] = 0.
	ham[11][2] = 0.
	ham[11][3] = 0.
	ham[11][4] = 0.
	ham[11][5] = 0.
	ham[11][6] = 0.
	ham[11][7] = 4.521205098926469*x0*x2 - 3.1029254668923723*x0*x4
	ham[11][8] = 0.
	ham[11][9] = 0.
	ham[11][10] = 0.
	ham[11][11] = -2.8962316714546232*x0*x1 - 0.39352039285803436*x0*x3 + 3.7442175096707992*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[11][12] = 0.
	ham[11][13] = 0.
	ham[11][14] = 0.
	ham[11][15] = 1.8317377426626162*x0*x2 + 4.777096625976184*x0*x4
	ham[11][16] = 0.
	ham[12][0] = 0.
	ham[12][1] = 0.
	ham[12][2] = 0.
	ham[12][3] = 0.
	ham[12][4] = 0.
	ham[12][5] = 0.
	ham[12][6] = 0.
	ham[12][7] = 0.
	ham[12][8] = 4.127276699649006*x0*x2 - 1.1330281816494678*x0*x4
	ham[12][9] = 0.
	ham[12][10] = 0.
	ham[12][11] = 0.
	ham[12][12] = -1.5446568914424659*x0*x1 - 3.148163142864275*x0*x3 + 5.153331626213573*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[12][13] = 0.
	ham[12][14] = 0.
	ham[12][15] = 0.
	ham[12][16] = 0.9459053029269173*x0*x2 + 3.8950769843430324*x0*x4
	ham[13][0] = 0.
	ham[13][1] = 0.
	ham[13][2] = 0.
	ham[13][3] = 0.
	ham[13][4] = 0.
	ham[13][5] = 0.
	ham[13][6] = 0.
	ham[13][7] = 0.
	ham[13][8] = 0.
	ham[13][9] = 3.5075107382511845*x0*x2 + 1.4443332019202966*x0*x4
	ham[13][10] = 0.
	ham[13][11] = 0.
	ham[13][12] = 0.
	ham[13][13] = 0.19308211143030823*x0*x1 - 5.115765107154447*x0*x3 + 2.61692621643658*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[13][14] = 0.
	ham[13][15] = 0.
	ham[13][16] = 0.
	ham[14][0] = 0.
	ham[14][1] = 0.
	ham[14][2] = 0.
	ham[14][3] = 0.
	ham[14][4] = 0.
	ham[14][5] = 0.
	ham[14][6] = 0.
	ham[14][7] = 0.
	ham[14][8] = 0.
	ham[14][9] = 0.
	ham[14][10] = 2.716906135178104*x0*x2 + 3.729252291607829*x0*x4
	ham[14][11] = 0.
	ham[14][12] = 0.
	ham[14][13] = 0.
	ham[14][14] = 2.3169853371636986*x0*x1 - 5.115765107154447*x0*x3 - 3.140311459723896*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[14][15] = 0.
	ham[14][16] = 0.
	ham[15][0] = 0.
	ham[15][1] = 0.
	ham[15][2] = 0.
	ham[15][3] = 0.
	ham[15][4] = 0.
	ham[15][5] = 0.
	ham[15][6] = 0.
	ham[15][7] = 0.
	ham[15][8] = 0.
	ham[15][9] = 0.
	ham[15][10] = 0.
	ham[15][11] = 1.8317377426626162*x0*x2 + 4.777096625976184*x0*x4
	ham[15][12] = 0.
	ham[15][13] = 0.
	ham[15][14] = 0.
	ham[15][15] = 4.827052785757706*x0*x1 - 1.7052550357181488*x0*x3 - 6.8040081627351086*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[15][16] = 0.
	ham[16][0] = 0.
	ham[16][1] = 0.
	ham[16][2] = 0.
	ham[16][3] = 0.
	ham[16][4] = 0.
	ham[16][5] = 0.
	ham[16][6] = 0.
	ham[16][7] = 0.
	ham[16][8] = 0.
	ham[16][9] = 0.
	ham[16][10] = 0.
	ham[16][11] = 0.
	ham[16][12] = 0.9459053029269173*x0*x2 + 3.8950769843430324*x0*x4
	ham[16][13] = 0.
	ham[16][14] = 0.
	ham[16][15] = 0.
	ham[16][16] = 7.72328445721233*x0*x1 + 6.821020142872595*x0*x3 + 4.1870819462985285*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	return ham
# Module creates crystal field Hamiltonian matrix for point group (PG) D3h and J = 4..
# Number of crystal field variables is 4 (and sign of x4): {x0, x1, x2, x3, sign(x4)}.
def ham_cr_PG_D3h_J_4(x0, x1, x2, x3, x4):
	J = 4.
	dim = int(2*J+1)
	ham = np.arange(dim*dim, dtype=np.float)
	ham = ham.reshape(dim,dim)
	ham[0][0] = 4.786344211304794*x0*x1 + 2.8160379844863472*x0*x2 + 0.8090398349558905*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[0][1] = 0.
	ham[0][2] = 0.
	ham[0][3] = 0.
	ham[0][4] = 0.
	ham[0][5] = 0.
	ham[0][6] = 3.2863353450309964*x0*x3
	ham[0][7] = 0.
	ham[0][8] = 0.
	ham[1][0] = 0.
	ham[1][1] = 1.1965860528261985*x0*x1 - 4.224056976729521*x0*x2 - 3.438419298562535*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[1][2] = 0.
	ham[1][3] = 0.
	ham[1][4] = 0.
	ham[1][5] = 0.
	ham[1][6] = 0.
	ham[1][7] = 4.347413023856832*x0*x3
	ham[1][8] = 0.
	ham[2][0] = 0.
	ham[2][1] = 0.
	ham[2][2] = -1.3675269175156552*x0*x1 - 2.2126012735249874*x0*x2 + 4.449719092257398*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[2][3] = 0.
	ham[2][4] = 0.
	ham[2][5] = 0.
	ham[2][6] = 0.
	ham[2][7] = 0.
	ham[2][8] = 3.2863353450309964*x0*x3
	ham[3][0] = 0.
	ham[3][1] = 0.
	ham[3][2] = 0.
	ham[3][3] = -2.9059946997207677*x0*x1 + 1.8103101328840805*x0*x2 + 0.20225995873897262*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[3][4] = 0.
	ham[3][5] = 0.
	ham[3][6] = 0.
	ham[3][7] = 0.
	ham[3][8] = 0.
	ham[4][0] = 0.
	ham[4][1] = 0.
	ham[4][2] = 0.
	ham[4][3] = 0.
	ham[4][4] = -3.4188172937891386*x0*x1 + 3.620620265768161*x0*x2 - 4.0451991747794525*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[4][5] = 0.
	ham[4][6] = 0.
	ham[4][7] = 0.
	ham[4][8] = 0.
	ham[5][0] = 0.
	ham[5][1] = 0.
	ham[5][2] = 0.
	ham[5][3] = 0.
	ham[5][4] = 0.
	ham[5][5] = -2.9059946997207677*x0*x1 + 1.8103101328840805*x0*x2 + 0.20225995873897262*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[5][6] = 0.
	ham[5][7] = 0.
	ham[5][8] = 0.
	ham[6][0] = 3.2863353450309964*x0*x3
	ham[6][1] = 0.
	ham[6][2] = 0.
	ham[6][3] = 0.
	ham[6][4] = 0.
	ham[6][5] = 0.
	ham[6][6] = -1.3675269175156552*x0*x1 - 2.2126012735249874*x0*x2 + 4.449719092257398*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[6][7] = 0.
	ham[6][8] = 0.
	ham[7][0] = 0.
	ham[7][1] = 4.347413023856832*x0*x3
	ham[7][2] = 0.
	ham[7][3] = 0.
	ham[7][4] = 0.
	ham[7][5] = 0.
	ham[7][6] = 0.
	ham[7][7] = 1.1965860528261985*x0*x1 - 4.224056976729521*x0*x2 - 3.438419298562535*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[7][8] = 0.
	ham[8][0] = 0.
	ham[8][1] = 0.
	ham[8][2] = 3.2863353450309964*x0*x3
	ham[8][3] = 0.
	ham[8][4] = 0.
	ham[8][5] = 0.
	ham[8][6] = 0.
	ham[8][7] = 0.
	ham[8][8] = 4.786344211304794*x0*x1 + 2.8160379844863472*x0*x2 + 0.8090398349558905*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	return ham
# Module creates crystal field Hamiltonian matrix for point group (PG) D3h and J=3.5.
# Number of crystal field variables is 4 (and sign of x4): {x0, x1, x2, x3, sign(x4)}.
def ham_cr_PG_D3h_J_3_5(x0, x1, x2, x3, x4):
	J = 3.5
	dim = int(2*J+1)
	ham = np.arange(dim*dim, dtype=np.float)
	ham = ham.reshape(dim,dim)
	ham[0][0] = 4.320493798938574*x0*x1 + 2.256304299271065*x0*x2 + 0.49236596391733095*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[0][1] = 0.
	ham[0][2] = 0.
	ham[0][3] = 0.
	ham[0][4] = 0.
	ham[0][5] = 0.
	ham[0][6] = 4.*x0*x3
	ham[0][7] = 0.
	ham[1][0] = 0.
	ham[1][1] = 0.6172133998483676*x0*x1 - 4.190279412931978*x0*x2 - 2.461829819586655*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[1][2] = 0.
	ham[1][3] = 0.
	ham[1][4] = 0.
	ham[1][5] = 0.
	ham[1][6] = 0.
	ham[1][7] = 4.*x0*x3
	ham[2][0] = 0.
	ham[2][1] = 0.
	ham[2][2] = -1.8516401995451028*x0*x1 - 0.9669875568304563*x0*x2 + 4.431293675255978*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[2][3] = 0.
	ham[2][4] = 0.
	ham[2][5] = 0.
	ham[2][6] = 0.
	ham[2][7] = 0.
	ham[3][0] = 0.
	ham[3][1] = 0.
	ham[3][2] = 0.
	ham[3][3] = -3.0860669992418384*x0*x1 + 2.900962670491369*x0*x2 - 2.461829819586655*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[3][4] = 0.
	ham[3][5] = 0.
	ham[3][6] = 0.
	ham[3][7] = 0.
	ham[4][0] = 0.
	ham[4][1] = 0.
	ham[4][2] = 0.
	ham[4][3] = 0.
	ham[4][4] = -3.0860669992418384*x0*x1 + 2.900962670491369*x0*x2 - 2.461829819586655*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[4][5] = 0.
	ham[4][6] = 0.
	ham[4][7] = 0.
	ham[5][0] = 0.
	ham[5][1] = 0.
	ham[5][2] = 0.
	ham[5][3] = 0.
	ham[5][4] = 0.
	ham[5][5] = -1.8516401995451028*x0*x1 - 0.9669875568304563*x0*x2 + 4.431293675255978*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[5][6] = 0.
	ham[5][7] = 0.
	ham[6][0] = 4.*x0*x3
	ham[6][1] = 0.
	ham[6][2] = 0.
	ham[6][3] = 0.
	ham[6][4] = 0.
	ham[6][5] = 0.
	ham[6][6] = 0.6172133998483676*x0*x1 - 4.190279412931978*x0*x2 - 2.461829819586655*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[6][7] = 0.
	ham[7][0] = 0.
	ham[7][1] = 4.*x0*x3
	ham[7][2] = 0.
	ham[7][3] = 0.
	ham[7][4] = 0.
	ham[7][5] = 0.
	ham[7][6] = 0.
	ham[7][7] = 4.320493798938574*x0*x1 + 2.256304299271065*x0*x2 + 0.49236596391733095*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	return ham
# Module creates crystal field Hamiltonian matrix for point group (PG) D3h and J=7.5.
# Number of crystal field variables is 4 (and sign of x4): {x0, x1, x2, x3, sign(x4)}.
def ham_cr_PG_D3h_J_7_5(x0, x1, x2, x3, x4):
	J = 7.5
	dim = int(2*J+1)
	ham = np.arange(dim*dim, dtype=np.float)
	ham = ham.reshape(dim,dim)
	ham[0][0] = 7.409585736349484*x0*x1 + 6.36943164204817*x0*x2 + 3.7353083379786685*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[0][1] = 0.
	ham[0][2] = 0.
	ham[0][3] = 0.
	ham[0][4] = 0.
	ham[0][5] = 0.
	ham[0][6] = 1.1348681406200578*x0*x3
	ham[0][7] = 0.
	ham[0][8] = 0.
	ham[0][9] = 0.
	ham[0][10] = 0.
	ham[0][11] = 0.
	ham[0][12] = 0.
	ham[0][13] = 0.
	ham[0][14] = 0.
	ham[0][15] = 0.
	ham[1][0] = 0.
	ham[1][1] = 4.445751441809691*x0*x1 - 2.1231438806827234*x0*x2 - 6.723555008361603*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[1][2] = 0.
	ham[1][3] = 0.
	ham[1][4] = 0.
	ham[1][5] = 0.
	ham[1][6] = 0.
	ham[1][7] = 2.325787592557969*x0*x3
	ham[1][8] = 0.
	ham[1][9] = 0.
	ham[1][10] = 0.
	ham[1][11] = 0.
	ham[1][12] = 0.
	ham[1][13] = 0.
	ham[1][14] = 0.
	ham[1][15] = 0.
	ham[2][0] = 0.
	ham[2][1] = 0.
	ham[2][2] = 1.9053220464898675*x0*x1 - 5.156206567372329*x0*x2 - 2.241185002787201*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[2][3] = 0.
	ham[2][4] = 0.
	ham[2][5] = 0.
	ham[2][6] = 0.
	ham[2][7] = 0.
	ham[2][8] = 3.5162603270102886*x0*x3
	ham[2][9] = 0.
	ham[2][10] = 0.
	ham[2][11] = 0.
	ham[2][12] = 0.
	ham[2][13] = 0.
	ham[2][14] = 0.
	ham[2][15] = 0.
	ham[3][0] = 0.
	ham[3][1] = 0.
	ham[3][2] = 0.
	ham[3][3] = -0.21170244960998524*x0*x1 - 4.6895815386508515*x0*x2 + 3.390510645242176*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[3][4] = 0.
	ham[3][5] = 0.
	ham[3][6] = 0.
	ham[3][7] = 0.
	ham[3][8] = 0.
	ham[3][9] = 4.46908888006903*x0*x3
	ham[3][10] = 0.
	ham[3][11] = 0.
	ham[3][12] = 0.
	ham[3][13] = 0.
	ham[3][14] = 0.
	ham[3][15] = 0.
	ham[4][0] = 0.
	ham[4][1] = 0.
	ham[4][2] = 0.
	ham[4][3] = 0.
	ham[4][4] = -1.9053220464898675*x0*x1 - 2.3564563950434625*x0*x2 + 4.999566544679141*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[4][5] = 0.
	ham[4][6] = 0.
	ham[4][7] = 0.
	ham[4][8] = 0.
	ham[4][9] = 0.
	ham[4][10] = 4.996593266661378*x0*x3
	ham[4][11] = 0.
	ham[4][12] = 0.
	ham[4][13] = 0.
	ham[4][14] = 0.
	ham[4][15] = 0.
	ham[5][0] = 0.
	ham[5][1] = 0.
	ham[5][2] = 0.
	ham[5][3] = 0.
	ham[5][4] = 0.
	ham[5][5] = -3.175536744149779*x0*x1 + 0.5366187830296993*x0*x2 + 2.5859826955236933*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[5][6] = 0.
	ham[5][7] = 0.
	ham[5][8] = 0.
	ham[5][9] = 0.
	ham[5][10] = 0.
	ham[5][11] = 4.996593266661378*x0*x3
	ham[5][12] = 0.
	ham[5][13] = 0.
	ham[5][14] = 0.
	ham[5][15] = 0.
	ham[6][0] = 1.1348681406200578*x0*x3
	ham[6][1] = 0.
	ham[6][2] = 0.
	ham[6][3] = 0.
	ham[6][4] = 0.
	ham[6][5] = 0.
	ham[6][6] = -4.02234654258972*x0*x1 + 3.0097314352535314*x0*x2 - 1.4366570530687186*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[6][7] = 0.
	ham[6][8] = 0.
	ham[6][9] = 0.
	ham[6][10] = 0.
	ham[6][11] = 0.
	ham[6][12] = 4.46908888006903*x0*x3
	ham[6][13] = 0.
	ham[6][14] = 0.
	ham[6][15] = 0.
	ham[7][0] = 0.
	ham[7][1] = 2.325787592557969*x0*x3
	ham[7][2] = 0.
	ham[7][3] = 0.
	ham[7][4] = 0.
	ham[7][5] = 0.
	ham[7][6] = 0.
	ham[7][7] = -4.445751441809691*x0*x1 + 4.409606521417964*x0*x2 - 4.309971159206156*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[7][8] = 0.
	ham[7][9] = 0.
	ham[7][10] = 0.
	ham[7][11] = 0.
	ham[7][12] = 0.
	ham[7][13] = 3.5162603270102886*x0*x3
	ham[7][14] = 0.
	ham[7][15] = 0.
	ham[8][0] = 0.
	ham[8][1] = 0.
	ham[8][2] = 3.5162603270102886*x0*x3
	ham[8][3] = 0.
	ham[8][4] = 0.
	ham[8][5] = 0.
	ham[8][6] = 0.
	ham[8][7] = 0.
	ham[8][8] = -4.445751441809691*x0*x1 + 4.409606521417964*x0*x2 - 4.309971159206156*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[8][9] = 0.
	ham[8][10] = 0.
	ham[8][11] = 0.
	ham[8][12] = 0.
	ham[8][13] = 0.
	ham[8][14] = 2.325787592557969*x0*x3
	ham[8][15] = 0.
	ham[9][0] = 0.
	ham[9][1] = 0.
	ham[9][2] = 0.
	ham[9][3] = 4.46908888006903*x0*x3
	ham[9][4] = 0.
	ham[9][5] = 0.
	ham[9][6] = 0.
	ham[9][7] = 0.
	ham[9][8] = 0.
	ham[9][9] = -4.02234654258972*x0*x1 + 3.0097314352535314*x0*x2 - 1.4366570530687186*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[9][10] = 0.
	ham[9][11] = 0.
	ham[9][12] = 0.
	ham[9][13] = 0.
	ham[9][14] = 0.
	ham[9][15] = 1.1348681406200578*x0*x3
	ham[10][0] = 0.
	ham[10][1] = 0.
	ham[10][2] = 0.
	ham[10][3] = 0.
	ham[10][4] = 4.996593266661378*x0*x3
	ham[10][5] = 0.
	ham[10][6] = 0.
	ham[10][7] = 0.
	ham[10][8] = 0.
	ham[10][9] = 0.
	ham[10][10] = -3.175536744149779*x0*x1 + 0.5366187830296993*x0*x2 + 2.5859826955236933*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[10][11] = 0.
	ham[10][12] = 0.
	ham[10][13] = 0.
	ham[10][14] = 0.
	ham[10][15] = 0.
	ham[11][0] = 0.
	ham[11][1] = 0.
	ham[11][2] = 0.
	ham[11][3] = 0.
	ham[11][4] = 0.
	ham[11][5] = 4.996593266661378*x0*x3
	ham[11][6] = 0.
	ham[11][7] = 0.
	ham[11][8] = 0.
	ham[11][9] = 0.
	ham[11][10] = 0.
	ham[11][11] = -1.9053220464898675*x0*x1 - 2.3564563950434625*x0*x2 + 4.999566544679141*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[11][12] = 0.
	ham[11][13] = 0.
	ham[11][14] = 0.
	ham[11][15] = 0.
	ham[12][0] = 0.
	ham[12][1] = 0.
	ham[12][2] = 0.
	ham[12][3] = 0.
	ham[12][4] = 0.
	ham[12][5] = 0.
	ham[12][6] = 4.46908888006903*x0*x3
	ham[12][7] = 0.
	ham[12][8] = 0.
	ham[12][9] = 0.
	ham[12][10] = 0.
	ham[12][11] = 0.
	ham[12][12] = -0.21170244960998524*x0*x1 - 4.6895815386508515*x0*x2 + 3.390510645242176*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[12][13] = 0.
	ham[12][14] = 0.
	ham[12][15] = 0.
	ham[13][0] = 0.
	ham[13][1] = 0.
	ham[13][2] = 0.
	ham[13][3] = 0.
	ham[13][4] = 0.
	ham[13][5] = 0.
	ham[13][6] = 0.
	ham[13][7] = 3.5162603270102886*x0*x3
	ham[13][8] = 0.
	ham[13][9] = 0.
	ham[13][10] = 0.
	ham[13][11] = 0.
	ham[13][12] = 0.
	ham[13][13] = 1.9053220464898675*x0*x1 - 5.156206567372329*x0*x2 - 2.241185002787201*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[13][14] = 0.
	ham[13][15] = 0.
	ham[14][0] = 0.
	ham[14][1] = 0.
	ham[14][2] = 0.
	ham[14][3] = 0.
	ham[14][4] = 0.
	ham[14][5] = 0.
	ham[14][6] = 0.
	ham[14][7] = 0.
	ham[14][8] = 2.325787592557969*x0*x3
	ham[14][9] = 0.
	ham[14][10] = 0.
	ham[14][11] = 0.
	ham[14][12] = 0.
	ham[14][13] = 0.
	ham[14][14] = 4.445751441809691*x0*x1 - 2.1231438806827234*x0*x2 - 6.723555008361603*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[14][15] = 0.
	ham[15][0] = 0.
	ham[15][1] = 0.
	ham[15][2] = 0.
	ham[15][3] = 0.
	ham[15][4] = 0.
	ham[15][5] = 0.
	ham[15][6] = 0.
	ham[15][7] = 0.
	ham[15][8] = 0.
	ham[15][9] = 1.1348681406200578*x0*x3
	ham[15][10] = 0.
	ham[15][11] = 0.
	ham[15][12] = 0.
	ham[15][13] = 0.
	ham[15][14] = 0.
	ham[15][15] = 7.409585736349484*x0*x1 + 6.36943164204817*x0*x2 + 3.7353083379786685*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	return ham
# Module creates crystal field Hamiltonian matrix for point group (PG) D3h and J=6..
# Number of crystal field variables is 4 (and sign of x4): {x0, x1, x2, x3, sign(x4)}.
def ham_cr_PG_D3h_J_6(x0, x1, x2, x3, x4):
	J = 6.
	dim = int(2*J+1)
	ham = np.arange(dim*dim, dtype=np.float)
	ham = ham.reshape(dim,dim)
	ham[0][0] = 6.391959234627741*x0*x1 + 4.932953842622631*x0*x2 + 2.3990452177181543*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[0][1] = 0.
	ham[0][2] = 0.
	ham[0][3] = 0.
	ham[0][4] = 0.
	ham[0][5] = 0.
	ham[0][6] = 1.696381141821664*x0*x3
	ham[0][7] = 0.
	ham[0][8] = 0.
	ham[0][9] = 0.
	ham[0][10] = 0.
	ham[0][11] = 0.
	ham[0][12] = 0.
	ham[1][0] = 0.
	ham[1][1] = 3.1959796173138706*x0*x1 - 3.288635895081754*x0*x2 - 5.997613044295385*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[1][2] = 0.
	ham[1][3] = 0.
	ham[1][4] = 0.
	ham[1][5] = 0.
	ham[1][6] = 0.
	ham[1][7] = 3.1736385150405217*x0*x3
	ham[1][8] = 0.
	ham[1][9] = 0.
	ham[1][10] = 0.
	ham[1][11] = 0.
	ham[1][12] = 0.
	ham[2][0] = 0.
	ham[2][1] = 0.
	ham[2][2] = 0.5810872031479765*x0*x1 - 4.783470392846187*x0*x2 + 0.872380079170238*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[2][3] = 0.
	ham[2][4] = 0.
	ham[2][5] = 0.
	ham[2][6] = 0.
	ham[2][7] = 0.
	ham[2][8] = 4.279333300696735*x0*x3
	ham[2][9] = 0.
	ham[2][10] = 0.
	ham[2][11] = 0.
	ham[2][12] = 0.
	ham[3][0] = 0.
	ham[3][1] = 0.
	ham[3][2] = 0.
	ham[3][3] = -1.452718007869941*x0*x1 - 2.6907020959759804*x0*x2 + 4.689042925540029*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[3][4] = 0.
	ham[3][5] = 0.
	ham[3][6] = 0.
	ham[3][7] = 0.
	ham[3][8] = 0.
	ham[3][9] = 4.68777475974928*x0*x3
	ham[3][10] = 0.
	ham[3][11] = 0.
	ham[3][12] = 0.
	ham[4][0] = 0.
	ham[4][1] = 0.
	ham[4][2] = 0.
	ham[4][3] = 0.
	ham[4][4] = -2.905436015739882*x0*x1 + 0.5481059825136256*x0*x2 + 2.3990452177181543*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[4][5] = 0.
	ham[4][6] = 0.
	ham[4][7] = 0.
	ham[4][8] = 0.
	ham[4][9] = 0.
	ham[4][10] = 4.279333300696735*x0*x3
	ham[4][11] = 0.
	ham[4][12] = 0.
	ham[5][0] = 0.
	ham[5][1] = 0.
	ham[5][2] = 0.
	ham[5][3] = 0.
	ham[5][4] = 0.
	ham[5][5] = -3.777066820461847*x0*x1 + 3.1889802618974583*x0*x2 - 2.1809501979255947*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[5][6] = 0.
	ham[5][7] = 0.
	ham[5][8] = 0.
	ham[5][9] = 0.
	ham[5][10] = 0.
	ham[5][11] = 3.1736385150405217*x0*x3
	ham[5][12] = 0.
	ham[6][0] = 1.696381141821664*x0*x3
	ham[6][1] = 0.
	ham[6][2] = 0.
	ham[6][3] = 0.
	ham[6][4] = 0.
	ham[6][5] = 0.
	ham[6][6] = -4.067610422035836*x0*x1 + 4.185536593740414*x0*x2 - 4.3619003958511895*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[6][7] = 0.
	ham[6][8] = 0.
	ham[6][9] = 0.
	ham[6][10] = 0.
	ham[6][11] = 0.
	ham[6][12] = 1.696381141821664*x0*x3
	ham[7][0] = 0.
	ham[7][1] = 3.1736385150405217*x0*x3
	ham[7][2] = 0.
	ham[7][3] = 0.
	ham[7][4] = 0.
	ham[7][5] = 0.
	ham[7][6] = 0.
	ham[7][7] = -3.777066820461847*x0*x1 + 3.1889802618974583*x0*x2 - 2.1809501979255947*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[7][8] = 0.
	ham[7][9] = 0.
	ham[7][10] = 0.
	ham[7][11] = 0.
	ham[7][12] = 0.
	ham[8][0] = 0.
	ham[8][1] = 0.
	ham[8][2] = 4.279333300696735*x0*x3
	ham[8][3] = 0.
	ham[8][4] = 0.
	ham[8][5] = 0.
	ham[8][6] = 0.
	ham[8][7] = 0.
	ham[8][8] = -2.905436015739882*x0*x1 + 0.5481059825136256*x0*x2 + 2.3990452177181543*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[8][9] = 0.
	ham[8][10] = 0.
	ham[8][11] = 0.
	ham[8][12] = 0.
	ham[9][0] = 0.
	ham[9][1] = 0.
	ham[9][2] = 0.
	ham[9][3] = 4.68777475974928*x0*x3
	ham[9][4] = 0.
	ham[9][5] = 0.
	ham[9][6] = 0.
	ham[9][7] = 0.
	ham[9][8] = 0.
	ham[9][9] = -1.452718007869941*x0*x1 - 2.6907020959759804*x0*x2 + 4.689042925540029*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[9][10] = 0.
	ham[9][11] = 0.
	ham[9][12] = 0.
	ham[10][0] = 0.
	ham[10][1] = 0.
	ham[10][2] = 0.
	ham[10][3] = 0.
	ham[10][4] = 4.279333300696735*x0*x3
	ham[10][5] = 0.
	ham[10][6] = 0.
	ham[10][7] = 0.
	ham[10][8] = 0.
	ham[10][9] = 0.
	ham[10][10] = 0.5810872031479765*x0*x1 - 4.783470392846187*x0*x2 + 0.872380079170238*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[10][11] = 0.
	ham[10][12] = 0.
	ham[11][0] = 0.
	ham[11][1] = 0.
	ham[11][2] = 0.
	ham[11][3] = 0.
	ham[11][4] = 0.
	ham[11][5] = 3.1736385150405217*x0*x3
	ham[11][6] = 0.
	ham[11][7] = 0.
	ham[11][8] = 0.
	ham[11][9] = 0.
	ham[11][10] = 0.
	ham[11][11] = 3.1959796173138706*x0*x1 - 3.288635895081754*x0*x2 - 5.997613044295385*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[11][12] = 0.
	ham[12][0] = 0.
	ham[12][1] = 0.
	ham[12][2] = 0.
	ham[12][3] = 0.
	ham[12][4] = 0.
	ham[12][5] = 0.
	ham[12][6] = 1.696381141821664*x0*x3
	ham[12][7] = 0.
	ham[12][8] = 0.
	ham[12][9] = 0.
	ham[12][10] = 0.
	ham[12][11] = 0.
	ham[12][12] = 6.391959234627741*x0*x1 + 4.932953842622631*x0*x2 + 2.3990452177181543*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	return ham
# Module creates crystal field Hamiltonian matrix for point group (PG) D3h and J=8..
# Number of crystal field variables is 4 (and sign of x4): {x0, x1, x2, x3, sign(x4)}.
def ham_cr_PG_D3h_J_8(x0, x1, x2, x3, x4):
	J = 8.
	dim = int(2*J+1)
	ham = np.arange(dim*dim, dtype=np.float)
	ham = ham.reshape(dim,dim)
	ham[0][0] = 7.72328445721233*x0*x1 + 6.821020142872595*x0*x2 + 4.1870819462985285*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[0][1] = 0.
	ham[0][2] = 0.
	ham[0][3] = 0.
	ham[0][4] = 0.
	ham[0][5] = 0.
	ham[0][6] = 1.0057045528370914*x0*x3
	ham[0][7] = 0.
	ham[0][8] = 0.
	ham[0][9] = 0.
	ham[0][10] = 0.
	ham[0][11] = 0.
	ham[0][12] = 0.
	ham[0][13] = 0.
	ham[0][14] = 0.
	ham[0][15] = 0.
	ham[0][16] = 0.
	ham[1][0] = 0.
	ham[1][1] = 4.827052785757706*x0*x1 - 1.7052550357181488*x0*x2 - 6.8040081627351086*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[1][2] = 0.
	ham[1][3] = 0.
	ham[1][4] = 0.
	ham[1][5] = 0.
	ham[1][6] = 0.
	ham[1][7] = 2.1035819946553036*x0*x3
	ham[1][8] = 0.
	ham[1][9] = 0.
	ham[1][10] = 0.
	ham[1][11] = 0.
	ham[1][12] = 0.
	ham[1][13] = 0.
	ham[1][14] = 0.
	ham[1][15] = 0.
	ham[1][16] = 0.
	ham[2][0] = 0.
	ham[2][1] = 0.
	ham[2][2] = 2.3169853371636986*x0*x1 - 5.115765107154447*x0*x2 - 3.140311459723896*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[2][3] = 0.
	ham[2][4] = 0.
	ham[2][5] = 0.
	ham[2][6] = 0.
	ham[2][7] = 0.
	ham[2][8] = 3.2588552130727084*x0*x3
	ham[2][9] = 0.
	ham[2][10] = 0.
	ham[2][11] = 0.
	ham[2][12] = 0.
	ham[2][13] = 0.
	ham[2][14] = 0.
	ham[2][15] = 0.
	ham[2][16] = 0.
	ham[3][0] = 0.
	ham[3][1] = 0.
	ham[3][2] = 0.
	ham[3][3] = 0.19308211143030823*x0*x1 - 5.115765107154447*x0*x2 + 2.61692621643658*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[3][4] = 0.
	ham[3][5] = 0.
	ham[3][6] = 0.
	ham[3][7] = 0.
	ham[3][8] = 0.
	ham[3][9] = 4.266843055087751*x0*x3
	ham[3][10] = 0.
	ham[3][11] = 0.
	ham[3][12] = 0.
	ham[3][13] = 0.
	ham[3][14] = 0.
	ham[3][15] = 0.
	ham[3][16] = 0.
	ham[4][0] = 0.
	ham[4][1] = 0.
	ham[4][2] = 0.
	ham[4][3] = 0.
	ham[4][4] = -1.5446568914424659*x0*x1 - 3.148163142864275*x0*x2 + 5.153331626213573*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[4][5] = 0.
	ham[4][6] = 0.
	ham[4][7] = 0.
	ham[4][8] = 0.
	ham[4][9] = 0.
	ham[4][10] = 4.950556448856843*x0*x3
	ham[4][11] = 0.
	ham[4][12] = 0.
	ham[4][13] = 0.
	ham[4][14] = 0.
	ham[4][15] = 0.
	ham[4][16] = 0.
	ham[5][0] = 0.
	ham[5][1] = 0.
	ham[5][2] = 0.
	ham[5][3] = 0.
	ham[5][4] = 0.
	ham[5][5] = -2.8962316714546232*x0*x1 - 0.39352039285803436*x0*x2 + 3.7442175096707992*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[5][6] = 0.
	ham[5][7] = 0.
	ham[5][8] = 0.
	ham[5][9] = 0.
	ham[5][10] = 0.
	ham[5][11] = 5.192187406926862*x0*x3
	ham[5][12] = 0.
	ham[5][13] = 0.
	ham[5][14] = 0.
	ham[5][15] = 0.
	ham[5][16] = 0.
	ham[6][0] = 1.0057045528370914*x0*x3
	ham[6][1] = 0.
	ham[6][2] = 0.
	ham[6][3] = 0.
	ham[6][4] = 0.
	ham[6][5] = 0.
	ham[6][6] = -3.861642228606165*x0*x1 + 2.2299488928621947*x0*x2 + 0.08052080665958708*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[6][7] = 0.
	ham[6][8] = 0.
	ham[6][9] = 0.
	ham[6][10] = 0.
	ham[6][11] = 0.
	ham[6][12] = 4.950556448856843*x0*x3
	ham[6][13] = 0.
	ham[6][14] = 0.
	ham[6][15] = 0.
	ham[6][16] = 0.
	ham[7][0] = 0.
	ham[7][1] = 2.1035819946553036*x0*x3
	ham[7][2] = 0.
	ham[7][3] = 0.
	ham[7][4] = 0.
	ham[7][5] = 0.
	ham[7][6] = 0.
	ham[7][7] = -4.440888562897089*x0*x1 + 4.066377392866355*x0*x2 - 3.422134283032451*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[7][8] = 0.
	ham[7][9] = 0.
	ham[7][10] = 0.
	ham[7][11] = 0.
	ham[7][12] = 0.
	ham[7][13] = 4.266843055087751*x0*x3
	ham[7][14] = 0.
	ham[7][15] = 0.
	ham[7][16] = 0.
	ham[8][0] = 0.
	ham[8][1] = 0.
	ham[8][2] = 3.2588552130727084*x0*x3
	ham[8][3] = 0.
	ham[8][4] = 0.
	ham[8][5] = 0.
	ham[8][6] = 0.
	ham[8][7] = 0.
	ham[8][8] = -4.633970674327397*x0*x1 + 4.722244714296412*x0*x2 - 4.831248399575225*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[8][9] = 0.
	ham[8][10] = 0.
	ham[8][11] = 0.
	ham[8][12] = 0.
	ham[8][13] = 0.
	ham[8][14] = 3.2588552130727084*x0*x3
	ham[8][15] = 0.
	ham[8][16] = 0.
	ham[9][0] = 0.
	ham[9][1] = 0.
	ham[9][2] = 0.
	ham[9][3] = 4.266843055087751*x0*x3
	ham[9][4] = 0.
	ham[9][5] = 0.
	ham[9][6] = 0.
	ham[9][7] = 0.
	ham[9][8] = 0.
	ham[9][9] = -4.440888562897089*x0*x1 + 4.066377392866355*x0*x2 - 3.422134283032451*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[9][10] = 0.
	ham[9][11] = 0.
	ham[9][12] = 0.
	ham[9][13] = 0.
	ham[9][14] = 0.
	ham[9][15] = 2.1035819946553036*x0*x3
	ham[9][16] = 0.
	ham[10][0] = 0.
	ham[10][1] = 0.
	ham[10][2] = 0.
	ham[10][3] = 0.
	ham[10][4] = 4.950556448856843*x0*x3
	ham[10][5] = 0.
	ham[10][6] = 0.
	ham[10][7] = 0.
	ham[10][8] = 0.
	ham[10][9] = 0.
	ham[10][10] = -3.861642228606165*x0*x1 + 2.2299488928621947*x0*x2 + 0.08052080665958708*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[10][11] = 0.
	ham[10][12] = 0.
	ham[10][13] = 0.
	ham[10][14] = 0.
	ham[10][15] = 0.
	ham[10][16] = 1.0057045528370914*x0*x3
	ham[11][0] = 0.
	ham[11][1] = 0.
	ham[11][2] = 0.
	ham[11][3] = 0.
	ham[11][4] = 0.
	ham[11][5] = 5.192187406926862*x0*x3
	ham[11][6] = 0.
	ham[11][7] = 0.
	ham[11][8] = 0.
	ham[11][9] = 0.
	ham[11][10] = 0.
	ham[11][11] = -2.8962316714546232*x0*x1 - 0.39352039285803436*x0*x2 + 3.7442175096707992*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[11][12] = 0.
	ham[11][13] = 0.
	ham[11][14] = 0.
	ham[11][15] = 0.
	ham[11][16] = 0.
	ham[12][0] = 0.
	ham[12][1] = 0.
	ham[12][2] = 0.
	ham[12][3] = 0.
	ham[12][4] = 0.
	ham[12][5] = 0.
	ham[12][6] = 4.950556448856843*x0*x3
	ham[12][7] = 0.
	ham[12][8] = 0.
	ham[12][9] = 0.
	ham[12][10] = 0.
	ham[12][11] = 0.
	ham[12][12] = -1.5446568914424659*x0*x1 - 3.148163142864275*x0*x2 + 5.153331626213573*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[12][13] = 0.
	ham[12][14] = 0.
	ham[12][15] = 0.
	ham[12][16] = 0.
	ham[13][0] = 0.
	ham[13][1] = 0.
	ham[13][2] = 0.
	ham[13][3] = 0.
	ham[13][4] = 0.
	ham[13][5] = 0.
	ham[13][6] = 0.
	ham[13][7] = 4.266843055087751*x0*x3
	ham[13][8] = 0.
	ham[13][9] = 0.
	ham[13][10] = 0.
	ham[13][11] = 0.
	ham[13][12] = 0.
	ham[13][13] = 0.19308211143030823*x0*x1 - 5.115765107154447*x0*x2 + 2.61692621643658*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[13][14] = 0.
	ham[13][15] = 0.
	ham[13][16] = 0.
	ham[14][0] = 0.
	ham[14][1] = 0.
	ham[14][2] = 0.
	ham[14][3] = 0.
	ham[14][4] = 0.
	ham[14][5] = 0.
	ham[14][6] = 0.
	ham[14][7] = 0.
	ham[14][8] = 3.2588552130727084*x0*x3
	ham[14][9] = 0.
	ham[14][10] = 0.
	ham[14][11] = 0.
	ham[14][12] = 0.
	ham[14][13] = 0.
	ham[14][14] = 2.3169853371636986*x0*x1 - 5.115765107154447*x0*x2 - 3.140311459723896*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[14][15] = 0.
	ham[14][16] = 0.
	ham[15][0] = 0.
	ham[15][1] = 0.
	ham[15][2] = 0.
	ham[15][3] = 0.
	ham[15][4] = 0.
	ham[15][5] = 0.
	ham[15][6] = 0.
	ham[15][7] = 0.
	ham[15][8] = 0.
	ham[15][9] = 2.1035819946553036*x0*x3
	ham[15][10] = 0.
	ham[15][11] = 0.
	ham[15][12] = 0.
	ham[15][13] = 0.
	ham[15][14] = 0.
	ham[15][15] = 4.827052785757706*x0*x1 - 1.7052550357181488*x0*x2 - 6.8040081627351086*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[15][16] = 0.
	ham[16][0] = 0.
	ham[16][1] = 0.
	ham[16][2] = 0.
	ham[16][3] = 0.
	ham[16][4] = 0.
	ham[16][5] = 0.
	ham[16][6] = 0.
	ham[16][7] = 0.
	ham[16][8] = 0.
	ham[16][9] = 0.
	ham[16][10] = 1.0057045528370914*x0*x3
	ham[16][11] = 0.
	ham[16][12] = 0.
	ham[16][13] = 0.
	ham[16][14] = 0.
	ham[16][15] = 0.
	ham[16][16] = 7.72328445721233*x0*x1 + 6.821020142872595*x0*x2 + 4.1870819462985285*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	return ham
# Module creates crystal field Hamiltonian matrix for point group (PG) Oh and J = 4.5.
# Number of crystal field variables is 2: {x0, x1}.
def ham_cr_PG_Oh_J_4_5(x0, x1):
	J = 4.5
	dim=int(2*J+1)
	ham = np.arange(dim*dim, dtype=np.float)
	ham = ham.reshape(dim,dim)
	ham[0][0] = 0.41286141192238524*x0 + 2.570679211490926*x0*x1 - 0.41286141192238524*x0*np.abs(x1)
	ham[0][1] = 0.
	ham[0][2] = 0.
	ham[0][3] = 0.
	ham[0][4] = -3.861964879083279*x0 + 1.1450715310358612*x0*x1 + 3.861964879083279*x0*np.abs(x1)
	ham[0][5] = 0.
	ham[0][6] = 0.
	ham[0][7] = 0.
	ham[0][8] = 0.
	ham[0][9] = 0.
	ham[1][0] = 0.
	ham[1][1] = -1.5138251770487459*x0 - 3.1419412584889095*x0*x1 + 1.5138251770487459*x0*np.abs(x1)
	ham[1][2] = 0.
	ham[1][3] = 0.
	ham[1][4] = 0.
	ham[1][5] = -0.7723929758166558*x0 + 1.9084525517264355*x0*x1 + 0.7723929758166558*x0*np.abs(x1)
	ham[1][6] = 0.
	ham[1][7] = 0.
	ham[1][8] = 0.
	ham[1][9] = 0.
	ham[2][0] = 0.
	ham[2][1] = 0.
	ham[2][2] = 1.3762047064079508*x0 - 2.42786369974143*x0*x1 - 1.3762047064079508*x0*np.abs(x1)
	ham[2][3] = 0.
	ham[2][4] = 0.
	ham[2][5] = 0.
	ham[2][6] = 2.522624895547565*x0 + 2.3373674750211433*x0*x1 - 2.522624895547565*x0*np.abs(x1)
	ham[2][7] = 0.
	ham[2][8] = 0.
	ham[2][9] = 0.
	ham[3][0] = 0.
	ham[3][1] = 0.
	ham[3][2] = 0.
	ham[3][3] = 0.8257228238447705*x0 + 0.42844653524848764*x0*x1 - 0.8257228238447705*x0*np.abs(x1)
	ham[3][4] = 0.
	ham[3][5] = 0.
	ham[3][6] = 0.
	ham[3][7] = 2.522624895547565*x0 + 2.3373674750211433*x0*x1 - 2.522624895547565*x0*np.abs(x1)
	ham[3][8] = 0.
	ham[3][9] = 0.
	ham[4][0] = -3.861964879083279*x0 + 1.1450715310358612*x0*x1 + 3.861964879083279*x0*np.abs(x1)
	ham[4][1] = 0.
	ham[4][2] = 0.
	ham[4][3] = 0.
	ham[4][4] = -1.1009637651263606*x0 + 2.570679211490926*x0*x1 + 1.1009637651263606*x0*np.abs(x1)
	ham[4][5] = 0.
	ham[4][6] = 0.
	ham[4][7] = 0.
	ham[4][8] = -0.7723929758166558*x0 + 1.9084525517264355*x0*x1 + 0.7723929758166558*x0*np.abs(x1)
	ham[4][9] = 0.
	ham[5][0] = 0.
	ham[5][1] = -0.7723929758166558*x0 + 1.9084525517264355*x0*x1 + 0.7723929758166558*x0*np.abs(x1)
	ham[5][2] = 0.
	ham[5][3] = 0.
	ham[5][4] = 0.
	ham[5][5] = -1.1009637651263606*x0 + 2.570679211490926*x0*x1 + 1.1009637651263606*x0*np.abs(x1)
	ham[5][6] = 0.
	ham[5][7] = 0.
	ham[5][8] = 0.
	ham[5][9] = -3.861964879083279*x0 + 1.1450715310358612*x0*x1 + 3.861964879083279*x0*np.abs(x1)
	ham[6][0] = 0.
	ham[6][1] = 0.
	ham[6][2] = 2.522624895547565*x0 + 2.3373674750211433*x0*x1 - 2.522624895547565*x0*np.abs(x1)
	ham[6][3] = 0.
	ham[6][4] = 0.
	ham[6][5] = 0.
	ham[6][6] = 0.8257228238447705*x0 + 0.42844653524848764*x0*x1 - 0.8257228238447705*x0*np.abs(x1)
	ham[6][7] = 0.
	ham[6][8] = 0.
	ham[6][9] = 0.
	ham[7][0] = 0.
	ham[7][1] = 0.
	ham[7][2] = 0.
	ham[7][3] = 2.522624895547565*x0 + 2.3373674750211433*x0*x1 - 2.522624895547565*x0*np.abs(x1)
	ham[7][4] = 0.
	ham[7][5] = 0.
	ham[7][6] = 0.
	ham[7][7] = 1.3762047064079508*x0 - 2.42786369974143*x0*x1 - 1.3762047064079508*x0*np.abs(x1)
	ham[7][8] = 0.
	ham[7][9] = 0.
	ham[8][0] = 0.
	ham[8][1] = 0.
	ham[8][2] = 0.
	ham[8][3] = 0.
	ham[8][4] = -0.7723929758166558*x0 + 1.9084525517264355*x0*x1 + 0.7723929758166558*x0*np.abs(x1)
	ham[8][5] = 0.
	ham[8][6] = 0.
	ham[8][7] = 0.
	ham[8][8] = -1.5138251770487459*x0 - 3.1419412584889095*x0*x1 + 1.5138251770487459*x0*np.abs(x1)
	ham[8][9] = 0.
	ham[9][0] = 0.
	ham[9][1] = 0.
	ham[9][2] = 0.
	ham[9][3] = 0.
	ham[9][4] = 0.
	ham[9][5] = -3.861964879083279*x0 + 1.1450715310358612*x0*x1 + 3.861964879083279*x0*np.abs(x1)
	ham[9][6] = 0.
	ham[9][7] = 0.
	ham[9][8] = 0.
	ham[9][9] = 0.41286141192238524*x0 + 2.570679211490926*x0*x1 - 0.41286141192238524*x0*np.abs(x1)
	return ham
# Module creates crystal field Hamiltonian matrix for point group (PG) C4v and J = 4.5.
# Number of crystal field variables is 5 (and sign of x5): {x0, x1, x2, x3, x4, sign(x5)}.
def ham_cr_PG_C4v_J_4_5(x0, x1, x2, x3, x4, x5):
	J = 4.5
	dim = int(2*J+1)
	ham = np.arange(dim*dim, dtype=np.float)
	ham = ham.reshape(dim,dim)
	ham[0][0] = 5.222329678670935*x0*x1 + 3.365809164030446*x0*x3 + 1.1677484162422844*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[0][1] = 0.
	ham[0][2] = 0.
	ham[0][3] = 0.
	ham[0][4] = 1.7739371879672476*x0*x2 + 4.128614119223853*x0*x4
	ham[0][5] = 0.
	ham[0][6] = 0.
	ham[0][7] = 0.
	ham[0][8] = 0.
	ham[0][9] = 0.
	ham[1][0] = 0.
	ham[1][1] = 1.7407765595569784*x0*x1 - 4.1137667560372115*x0*x3 - 4.281744192888376*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[1][2] = 0.
	ham[1][3] = 0.
	ham[1][4] = 0.
	ham[1][5] = 2.956561979945413*x0*x2 + 0.8257228238447705*x0*x4
	ham[1][6] = 0.
	ham[1][7] = 0.
	ham[1][8] = 0.
	ham[1][9] = 0.
	ham[2][0] = 0.
	ham[2][1] = 0.
	ham[2][2] = -0.8703882797784892*x0*x1 - 3.178819766028755*x0*x3 + 3.892494720807615*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[2][3] = 0.
	ham[2][4] = 0.
	ham[2][5] = 0.
	ham[2][6] = 3.621034121889507*x0*x2 - 2.696799449852968*x0*x4
	ham[2][7] = 0.
	ham[2][8] = 0.
	ham[2][9] = 0.
	ham[3][0] = 0.
	ham[3][1] = 0.
	ham[3][2] = 0.
	ham[3][3] = -2.6111648393354674*x0*x1 + 0.5609681940050744*x0*x3 + 2.335496832484569*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[3][4] = 0.
	ham[3][5] = 0.
	ham[3][6] = 0.
	ham[3][7] = 3.621034121889507*x0*x2 - 2.696799449852968*x0*x4
	ham[3][8] = 0.
	ham[3][9] = 0.
	ham[4][0] = 1.7739371879672476*x0*x2 + 4.128614119223853*x0*x4
	ham[4][1] = 0.
	ham[4][2] = 0.
	ham[4][3] = 0.
	ham[4][4] = -3.481553119113957*x0*x1 + 3.365809164030446*x0*x3 - 3.113995776646092*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[4][5] = 0.
	ham[4][6] = 0.
	ham[4][7] = 0.
	ham[4][8] = 2.956561979945413*x0*x2 + 0.8257228238447705*x0*x4
	ham[4][9] = 0.
	ham[5][0] = 0.
	ham[5][1] = 2.956561979945413*x0*x2 + 0.8257228238447705*x0*x4
	ham[5][2] = 0.
	ham[5][3] = 0.
	ham[5][4] = 0.
	ham[5][5] = -3.481553119113957*x0*x1 + 3.365809164030446*x0*x3 - 3.113995776646092*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[5][6] = 0.
	ham[5][7] = 0.
	ham[5][8] = 0.
	ham[5][9] = 1.7739371879672476*x0*x2 + 4.128614119223853*x0*x4
	ham[6][0] = 0.
	ham[6][1] = 0.
	ham[6][2] = 3.621034121889507*x0*x2 - 2.696799449852968*x0*x4
	ham[6][3] = 0.
	ham[6][4] = 0.
	ham[6][5] = 0.
	ham[6][6] = -2.6111648393354674*x0*x1 + 0.5609681940050744*x0*x3 + 2.335496832484569*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[6][7] = 0.
	ham[6][8] = 0.
	ham[6][9] = 0.
	ham[7][0] = 0.
	ham[7][1] = 0.
	ham[7][2] = 0.
	ham[7][3] = 3.621034121889507*x0*x2 - 2.696799449852968*x0*x4
	ham[7][4] = 0.
	ham[7][5] = 0.
	ham[7][6] = 0.
	ham[7][7] = -0.8703882797784892*x0*x1 - 3.178819766028755*x0*x3 + 3.892494720807615*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[7][8] = 0.
	ham[7][9] = 0.
	ham[8][0] = 0.
	ham[8][1] = 0.
	ham[8][2] = 0.
	ham[8][3] = 0.
	ham[8][4] = 2.956561979945413*x0*x2 + 0.8257228238447705*x0*x4
	ham[8][5] = 0.
	ham[8][6] = 0.
	ham[8][7] = 0.
	ham[8][8] = 1.7407765595569784*x0*x1 - 4.1137667560372115*x0*x3 - 4.281744192888376*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	ham[8][9] = 0.
	ham[9][0] = 0.
	ham[9][1] = 0.
	ham[9][2] = 0.
	ham[9][3] = 0.
	ham[9][4] = 0.
	ham[9][5] = 1.7739371879672476*x0*x2 + 4.128614119223853*x0*x4
	ham[9][6] = 0.
	ham[9][7] = 0.
	ham[9][8] = 0.
	ham[9][9] = 5.222329678670935*x0*x1 + 3.365809164030446*x0*x3 + 1.1677484162422844*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3) - 1.*np.abs(x4))*np.sign(x5)
	return ham
# Module creates crystal field Hamiltonian matrix for point group (PG) D3h and J=4.5.
# Number of crystal field variables is 4 (and sign of x4): {x0, x1, x2, x3, sign(x4)}.
def ham_cr_PG_D3h_J_4_5(x0, x1, x2, x3, x4):
	J = 4.5
	dim = int(2*J+1)
	ham = np.arange(dim*dim, dtype=np.float)
	ham = ham.reshape(dim,dim)
	ham[0][0] = 5.222329678670935*x0*x1 + 3.365809164030446*x0*x2 + 1.1677484162422844*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[0][1] = 0.
	ham[0][2] = 0.
	ham[0][3] = 0.
	ham[0][4] = 0.
	ham[0][5] = 0.
	ham[0][6] = 2.7386127875258306*x0*x3
	ham[0][7] = 0.
	ham[0][8] = 0.
	ham[0][9] = 0.
	ham[1][0] = 0.
	ham[1][1] = 1.7407765595569784*x0*x1 - 4.1137667560372115*x0*x2 - 4.281744192888376*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[1][2] = 0.
	ham[1][3] = 0.
	ham[1][4] = 0.
	ham[1][5] = 0.
	ham[1][6] = 0.
	ham[1][7] = 4.183300132670378*x0*x3
	ham[1][8] = 0.
	ham[1][9] = 0.
	ham[2][0] = 0.
	ham[2][1] = 0.
	ham[2][2] = -0.8703882797784892*x0*x1 - 3.178819766028755*x0*x2 + 3.892494720807615*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[2][3] = 0.
	ham[2][4] = 0.
	ham[2][5] = 0.
	ham[2][6] = 0.
	ham[2][7] = 0.
	ham[2][8] = 4.183300132670378*x0*x3
	ham[2][9] = 0.
	ham[3][0] = 0.
	ham[3][1] = 0.
	ham[3][2] = 0.
	ham[3][3] = -2.6111648393354674*x0*x1 + 0.5609681940050744*x0*x2 + 2.335496832484569*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[3][4] = 0.
	ham[3][5] = 0.
	ham[3][6] = 0.
	ham[3][7] = 0.
	ham[3][8] = 0.
	ham[3][9] = 2.7386127875258306*x0*x3
	ham[4][0] = 0.
	ham[4][1] = 0.
	ham[4][2] = 0.
	ham[4][3] = 0.
	ham[4][4] = -3.481553119113957*x0*x1 + 3.365809164030446*x0*x2 - 3.113995776646092*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[4][5] = 0.
	ham[4][6] = 0.
	ham[4][7] = 0.
	ham[4][8] = 0.
	ham[4][9] = 0.
	ham[5][0] = 0.
	ham[5][1] = 0.
	ham[5][2] = 0.
	ham[5][3] = 0.
	ham[5][4] = 0.
	ham[5][5] = -3.481553119113957*x0*x1 + 3.365809164030446*x0*x2 - 3.113995776646092*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[5][6] = 0.
	ham[5][7] = 0.
	ham[5][8] = 0.
	ham[5][9] = 0.
	ham[6][0] = 2.7386127875258306*x0*x3
	ham[6][1] = 0.
	ham[6][2] = 0.
	ham[6][3] = 0.
	ham[6][4] = 0.
	ham[6][5] = 0.
	ham[6][6] = -2.6111648393354674*x0*x1 + 0.5609681940050744*x0*x2 + 2.335496832484569*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[6][7] = 0.
	ham[6][8] = 0.
	ham[6][9] = 0.
	ham[7][0] = 0.
	ham[7][1] = 4.183300132670378*x0*x3
	ham[7][2] = 0.
	ham[7][3] = 0.
	ham[7][4] = 0.
	ham[7][5] = 0.
	ham[7][6] = 0.
	ham[7][7] = -0.8703882797784892*x0*x1 - 3.178819766028755*x0*x2 + 3.892494720807615*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[7][8] = 0.
	ham[7][9] = 0.
	ham[8][0] = 0.
	ham[8][1] = 0.
	ham[8][2] = 4.183300132670378*x0*x3
	ham[8][3] = 0.
	ham[8][4] = 0.
	ham[8][5] = 0.
	ham[8][6] = 0.
	ham[8][7] = 0.
	ham[8][8] = 1.7407765595569784*x0*x1 - 4.1137667560372115*x0*x2 - 4.281744192888376*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	ham[8][9] = 0.
	ham[9][0] = 0.
	ham[9][1] = 0.
	ham[9][2] = 0.
	ham[9][3] = 2.7386127875258306*x0*x3
	ham[9][4] = 0.
	ham[9][5] = 0.
	ham[9][6] = 0.
	ham[9][7] = 0.
	ham[9][8] = 0.
	ham[9][9] = 5.222329678670935*x0*x1 + 3.365809164030446*x0*x2 + 1.1677484162422844*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2) - 1.*np.abs(x3))*np.sign(x4)
	return ham
# Module creates crystal field Hamiltonian matrix for point group (PG) C4v and J = 2.5.
# Number of crystal field variables is 3 (and sign of x3): {x0, x1, x2, sign(x3)}.
def ham_cr_PG_C4v_J_2_5(x0, x1, x2, x3):
	J = 2.5
	dim = int(2*J+1)
	ham = np.arange(dim*dim, dtype=np.float)
	ham = ham.reshape(dim,dim)
	ham[0][0] = 3.273268353539885*x0*x1 + 1.1338934190276815*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2))*np.sign(x3)
	ham[0][1] = 0.
	ham[0][2] = 0.
	ham[0][3] = 0.
	ham[0][4] = 3.*x0*x2
	ham[0][5] = 0.
	ham[1][0] = 0.
	ham[1][1] = -0.6546536707079771*x0*x1 - 3.401680257083045*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2))*np.sign(x3)
	ham[1][2] = 0.
	ham[1][3] = 0.
	ham[1][4] = 0.
	ham[1][5] = 3.*x0*x2
	ham[2][0] = 0.
	ham[2][1] = 0.
	ham[2][2] = -2.6186146828319083*x0*x1 + 2.267786838055363*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2))*np.sign(x3)
	ham[2][3] = 0.
	ham[2][4] = 0.
	ham[2][5] = 0.
	ham[3][0] = 0.
	ham[3][1] = 0.
	ham[3][2] = 0.
	ham[3][3] = -2.6186146828319083*x0*x1 + 2.267786838055363*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2))*np.sign(x3)
	ham[3][4] = 0.
	ham[3][5] = 0.
	ham[4][0] = 3.*x0*x2
	ham[4][1] = 0.
	ham[4][2] = 0.
	ham[4][3] = 0.
	ham[4][4] = -0.6546536707079771*x0*x1 - 3.401680257083045*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2))*np.sign(x3)
	ham[4][5] = 0.
	ham[5][0] = 0.
	ham[5][1] = 3.*x0*x2
	ham[5][2] = 0.
	ham[5][3] = 0.
	ham[5][4] = 0.
	ham[5][5] = 3.273268353539885*x0*x1 + 1.1338934190276815*x0*np.abs(1. - 1.*np.abs(x1) - 1.*np.abs(x2))*np.sign(x3)
	return ham
